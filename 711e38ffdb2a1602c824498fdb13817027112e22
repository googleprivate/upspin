{
  "comments": [
    {
      "key": {
        "uuid": "fc922b13_e6b2f457",
        "filename": "bind/bind.go",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-05-23T20:00:42Z",
      "side": 1,
      "message": "// comment",
      "revId": "711e38ffdb2a1602c824498fdb13817027112e22",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7ab26ee_f5574aef",
        "filename": "bind/bind.go",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 5010
      },
      "writtenOn": "2016-05-20T17:40:54Z",
      "side": 1,
      "message": "Why are these LRUs?  If we are holding a connection and all its associated kilobytes of memory, why are we afraid to hold the little bit more that this represents until we forget about the binding.  Or is that the problem, that we don\u0027t know when the binding has been forgotten?",
      "range": {
        "startLine": 26,
        "startChar": 1,
        "endLine": 30,
        "endChar": 46
      },
      "revId": "711e38ffdb2a1602c824498fdb13817027112e22",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7ab26ee_5568de78",
        "filename": "bind/bind.go",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-05-20T17:57:17Z",
      "side": 1,
      "message": "I can change to a map, that\u0027s not a problem. But my rationale is to not hold on to stuff forever.\n\nImagine that we are an airport kiosk where people can use it for a while. They Dial their services, use the system and go away. At the end of a month we\u0027ll run out of memory if we use a map and never forget. Having a max size would be useful, no?",
      "parentUuid": "f7ab26ee_f5574aef",
      "range": {
        "startLine": 26,
        "startChar": 1,
        "endLine": 30,
        "endChar": 46
      },
      "revId": "711e38ffdb2a1602c824498fdb13817027112e22",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7ab26ee_40cdbe96",
        "filename": "bind/bind.go",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 5010
      },
      "writtenOn": "2016-05-20T19:05:35Z",
      "side": 1,
      "message": "You are right.  If there\u0027s no way to know when the connections really go away, there\u0027s no way to maintain consistency between a map and what connections really exist so we can never clean up the map.   I guess an LRU is as good as we\u0027ll ever get.",
      "parentUuid": "f7ab26ee_5568de78",
      "range": {
        "startLine": 26,
        "startChar": 1,
        "endLine": 30,
        "endChar": 46
      },
      "revId": "711e38ffdb2a1602c824498fdb13817027112e22",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc922b13_c6b9f83a",
        "filename": "bind/bind.go",
        "patchSetId": 3
      },
      "lineNbr": 119,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-05-23T20:00:42Z",
      "side": 1,
      "message": "in all three calls to reachableService you\u0027re creating a key first. it would be simpler to create it in reachable service, and to pass the context and endpoint as scalar arguments.",
      "revId": "711e38ffdb2a1602c824498fdb13817027112e22",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7ab26ee_d5a68e21",
        "filename": "bind/bind.go",
        "patchSetId": 3
      },
      "lineNbr": 132,
      "author": {
        "id": 5010
      },
      "writtenOn": "2016-05-20T17:40:54Z",
      "side": 1,
      "message": "I\u0027m still a bit bothered about doubling the round trip time for each request, but I guess that can be addressed in the Ping code itself.  I guess anything not using a RESTful interface can just see if the connection hasn\u0027t been hung up.  Perhaps we can add something in net/http that does something similar...",
      "range": {
        "startLine": 132,
        "startChar": 13,
        "endLine": 132,
        "endChar": 17
      },
      "revId": "711e38ffdb2a1602c824498fdb13817027112e22",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7ab26ee_35fa72cb",
        "filename": "bind/bind.go",
        "patchSetId": 3
      },
      "lineNbr": 132,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-05-20T17:57:17Z",
      "side": 1,
      "message": "Yeah, we can do better on the HTTP front, but it requires a bit more digging into the internals of the HTTP client itself. I need to use the same HTTPClientInterface than the one the service uses as opposed to this netutil default HTTP client. I can fix that in another CL.",
      "parentUuid": "f7ab26ee_d5a68e21",
      "range": {
        "startLine": 132,
        "startChar": 13,
        "endLine": 132,
        "endChar": 17
      },
      "revId": "711e38ffdb2a1602c824498fdb13817027112e22",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc922b13_e69994d9",
        "filename": "bind/bind.go",
        "patchSetId": 3
      },
      "lineNbr": 132,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-05-23T20:00:42Z",
      "side": 1,
      "message": "i think it\u0027s worth considering a short timer here, so we don\u0027t ping it again milliseconds after we found out it was up. that could be a TODO for now.",
      "parentUuid": "f7ab26ee_d5a68e21",
      "revId": "711e38ffdb2a1602c824498fdb13817027112e22",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7ab26ee_75b6ba4e",
        "filename": "directory/remote/remote.go",
        "patchSetId": 3
      },
      "lineNbr": 167,
      "author": {
        "id": 5010
      },
      "writtenOn": "2016-05-20T17:40:54Z",
      "side": 1,
      "message": "Nor will this work with anything that isn\u0027t http.  Shouldn\u0027t it just be calling Ping of the service below it, i.e., the DIrectory client that it is calling.",
      "range": {
        "startLine": 167,
        "startChar": 17,
        "endLine": 167,
        "endChar": 21
      },
      "revId": "711e38ffdb2a1602c824498fdb13817027112e22",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7ab26ee_b5b822f7",
        "filename": "directory/remote/remote.go",
        "patchSetId": 3
      },
      "lineNbr": 167,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-05-20T17:57:17Z",
      "side": 1,
      "message": "Hmmm... you mean, creating a request and doing r.rpcClient.Call(\"Server.Ping\", \u0026req, \u0026resp)?\n\nI guess, we could. Maybe that\u0027s what the TODO will eventually be. I\u0027ll sync up with Rob on this one. For sure this shouldn\u0027t be an HTTP HEAD request.",
      "parentUuid": "f7ab26ee_75b6ba4e",
      "range": {
        "startLine": 167,
        "startChar": 17,
        "endLine": 167,
        "endChar": 21
      },
      "revId": "711e38ffdb2a1602c824498fdb13817027112e22",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7ab26ee_1b9de764",
        "filename": "directory/remote/remote.go",
        "patchSetId": 3
      },
      "lineNbr": 167,
      "author": {
        "id": 5010
      },
      "writtenOn": "2016-05-20T19:05:35Z",
      "side": 1,
      "message": "It can\u0027t be just a TODO.  This will keep the test directory from working since it has no associated http port in the endpoint, just inprocess.",
      "parentUuid": "f7ab26ee_b5b822f7",
      "range": {
        "startLine": 167,
        "startChar": 17,
        "endLine": 167,
        "endChar": 21
      },
      "revId": "711e38ffdb2a1602c824498fdb13817027112e22",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7ab26ee_bb7933ec",
        "filename": "directory/remote/remote.go",
        "patchSetId": 3
      },
      "lineNbr": 167,
      "author": {
        "id": 5010
      },
      "writtenOn": "2016-05-20T19:17:52Z",
      "side": 1,
      "message": "Ignore me, I\u0027m full of shit since the test directory is also hanging on an HTTP interface and that\u0027s  how you are getting to it.  We can live with this for now.",
      "parentUuid": "f7ab26ee_1b9de764",
      "range": {
        "startLine": 167,
        "startChar": 17,
        "endLine": 167,
        "endChar": 21
      },
      "revId": "711e38ffdb2a1602c824498fdb13817027112e22",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc922b13_c6bed80a",
        "filename": "upspin/upspin.go",
        "patchSetId": 3
      },
      "lineNbr": 488,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-05-23T20:00:42Z",
      "side": 1,
      "message": "s/currently //\n\"is\" means \"currently\"",
      "revId": "711e38ffdb2a1602c824498fdb13817027112e22",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    }
  ]
}