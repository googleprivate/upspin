{
  "comments": [
    {
      "key": {
        "uuid": "711bb8b8_66a04ec3",
        "filename": "upspin/upspin.go",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 5025
      },
      "writtenOn": "2016-02-02T18:29:26Z",
      "side": 1,
      "message": "If I understand correctly how Packer is to be used, this metadata is computed inside Pack and the length is not known precisely in advance.   End2End can compute a good size estimate if the number of readers is known.",
      "range": {
        "startLine": 16,
        "startChar": 31,
        "endLine": 16,
        "endChar": 47
      },
      "revId": "f336dbff7c331eb23f4eaa0e583cbb0a2063c934",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "711bb8b8_49a725cb",
        "filename": "upspin/upspin.go",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-02-02T18:36:51Z",
      "side": 1,
      "message": "I thought the metadata is where the keys and other such information come from. Or perhaps this should be of type upspin.Metadata?\n\nFeeling my way here.",
      "parentUuid": "711bb8b8_66a04ec3",
      "range": {
        "startLine": 16,
        "startChar": 31,
        "endLine": 16,
        "endChar": 47
      },
      "revId": "f336dbff7c331eb23f4eaa0e583cbb0a2063c934",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "711bb8b8_46ac32c5",
        "filename": "upspin/upspin.go",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 5025
      },
      "writtenOn": "2016-02-02T18:29:26Z",
      "side": 1,
      "message": "Compress before encrypt has been surprisingly vulnerable in HTTPS, but looks ok to me in our cleaner situation.   So, yes, ciphertext might be smaller.",
      "range": {
        "startLine": 31,
        "startChar": 1,
        "endLine": 33,
        "endChar": 16
      },
      "revId": "f336dbff7c331eb23f4eaa0e583cbb0a2063c934",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "711bb8b8_a9ab3993",
        "filename": "upspin/upspin.go",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-02-02T18:36:51Z",
      "side": 1,
      "message": "The problem I am struggling with here is that we do not want packing and unpacking to allocate new buffer space if possible. The caller must be able to provide a buffer for the pack/unpack operations.",
      "parentUuid": "711bb8b8_46ac32c5",
      "range": {
        "startLine": 31,
        "startChar": 1,
        "endLine": 33,
        "endChar": 16
      },
      "revId": "f336dbff7c331eb23f4eaa0e583cbb0a2063c934",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    }
  ]
}