{
  "comments": [
    {
      "key": {
        "uuid": "b8474c04_54bc6d21",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 194,
      "author": {
        "id": 5389
      },
      "writtenOn": "2017-05-19T06:41:18Z",
      "side": 1,
      "message": "rather than this incredibly gross error return, I suggest adding a method GarbageList to *server\nThen in serverutil/upspinserver you can expose a hook that calls this method.\nIt can find the method using a type assertion to an interface that contains that method, something like this: https://github.com/upspin/upspin/blob/master/serverutil/keyserver/main.go#L63",
      "revId": "18d7a7658a92cf572500a94703c9aab1a38ae1d5",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ed2ba09_ccf22f5a",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 194,
      "author": {
        "id": 5307
      },
      "writtenOn": "2017-05-22T23:13:40Z",
      "side": 1,
      "message": "Perhaps I misunderstand the suggestion, but since I wanted to avoid any change in the wire protocol, it seems inherently messy to get the data from dirserver to client.\n\nWe\u0027re agreed that instead of implementing policy (i.e. doing the diff) client-side, I\u0027ll try doing it in dirserver.   Or possibly I\u0027ll write a separate standalone program that runs on the server instance.",
      "parentUuid": "b8474c04_54bc6d21",
      "revId": "18d7a7658a92cf572500a94703c9aab1a38ae1d5",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c81f960_f1ea74e2",
        "filename": "dir/server/tree/tree.go",
        "patchSetId": 2
      },
      "lineNbr": 882,
      "author": {
        "id": 5389
      },
      "writtenOn": "2017-05-19T06:41:18Z",
      "side": 1,
      "message": "Should this be a method on Tree? Probably",
      "revId": "18d7a7658a92cf572500a94703c9aab1a38ae1d5",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "860ddc8b_a42951e4",
        "filename": "dir/server/tree/tree.go",
        "patchSetId": 2
      },
      "lineNbr": 882,
      "author": {
        "id": 5307
      },
      "writtenOn": "2017-05-22T23:13:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1c81f960_f1ea74e2",
      "revId": "18d7a7658a92cf572500a94703c9aab1a38ae1d5",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "841c8306_42aa9cdb",
        "filename": "dir/server/tree/tree.go",
        "patchSetId": 2
      },
      "lineNbr": 893,
      "author": {
        "id": 5389
      },
      "writtenOn": "2017-05-19T06:41:18Z",
      "side": 1,
      "message": "you should probably be checking that the Location.Endpoint is this server\u0027s endpoint\nyou might need to pass that in as an argument to this function, as i don\u0027t think the Tree knows its own Endpoint",
      "revId": "18d7a7658a92cf572500a94703c9aab1a38ae1d5",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82ad2d88_cc7f2614",
        "filename": "dir/server/tree/tree.go",
        "patchSetId": 2
      },
      "lineNbr": 893,
      "author": {
        "id": 5307
      },
      "writtenOn": "2017-05-22T23:13:40Z",
      "side": 1,
      "message": "My reasoning was that if we see a sha256 sum in the dirserver, let\u0027s leave that on the storeserver whether or not that storeserver is the official Endpoint.  It may be part of some coming replicated service.",
      "parentUuid": "841c8306_42aa9cdb",
      "revId": "18d7a7658a92cf572500a94703c9aab1a38ae1d5",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f71c767_25ebaa2c",
        "filename": "dir/server/tree/tree.go",
        "patchSetId": 2
      },
      "lineNbr": 894,
      "author": {
        "id": 5389
      },
      "writtenOn": "2017-05-19T06:41:18Z",
      "side": 1,
      "message": "if you make the map\n\nmap[upspin.Reference]bool\n\nthen you don\u0027t need the conversion here",
      "revId": "18d7a7658a92cf572500a94703c9aab1a38ae1d5",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4581c278_9335f381",
        "filename": "dir/server/tree/tree.go",
        "patchSetId": 2
      },
      "lineNbr": 894,
      "author": {
        "id": 5307
      },
      "writtenOn": "2017-05-22T23:13:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3f71c767_25ebaa2c",
      "revId": "18d7a7658a92cf572500a94703c9aab1a38ae1d5",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c8bedd1_912c84ff",
        "filename": "dir/server/tree/tree.go",
        "patchSetId": 2
      },
      "lineNbr": 895,
      "author": {
        "id": 5389
      },
      "writtenOn": "2017-05-19T06:41:18Z",
      "side": 1,
      "message": "delete",
      "revId": "18d7a7658a92cf572500a94703c9aab1a38ae1d5",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68be5bd2_62c96a6f",
        "filename": "dir/server/tree/tree.go",
        "patchSetId": 2
      },
      "lineNbr": 895,
      "author": {
        "id": 5307
      },
      "writtenOn": "2017-05-22T23:13:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3c8bedd1_912c84ff",
      "revId": "18d7a7658a92cf572500a94703c9aab1a38ae1d5",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d387b7c_dfe6cc44",
        "filename": "dir/server/tree/tree.go",
        "patchSetId": 2
      },
      "lineNbr": 896,
      "author": {
        "id": 5389
      },
      "writtenOn": "2017-05-19T06:41:18Z",
      "side": 1,
      "message": "if refs[ref] || verbose {",
      "revId": "18d7a7658a92cf572500a94703c9aab1a38ae1d5",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4863dd4a_d0bfffd7",
        "filename": "dir/server/tree/tree.go",
        "patchSetId": 2
      },
      "lineNbr": 896,
      "author": {
        "id": 5307
      },
      "writtenOn": "2017-05-22T23:13:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2d387b7c_dfe6cc44",
      "revId": "18d7a7658a92cf572500a94703c9aab1a38ae1d5",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32c84a4c_cd516341",
        "filename": "exp/cmd/garbage/main.go",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 5309
      },
      "writtenOn": "2017-05-17T16:22:48Z",
      "side": 1,
      "message": "Don\u0027t we want to get the list of extant blocks first?  If we get them second, there can have been file creations twixt the dir lookup and the store get.",
      "range": {
        "startLine": 72,
        "startChar": 1,
        "endLine": 87,
        "endChar": 82
      },
      "revId": "18d7a7658a92cf572500a94703c9aab1a38ae1d5",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4590e2b3_a39fb5d4",
        "filename": "exp/cmd/garbage/main.go",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 5307
      },
      "writtenOn": "2017-05-17T16:29:47Z",
      "side": 1,
      "message": "Oops, correct.  That was a last minute re-ordering of the code before submission that I should not have done.",
      "parentUuid": "32c84a4c_cd516341",
      "range": {
        "startLine": 72,
        "startChar": 1,
        "endLine": 87,
        "endChar": 82
      },
      "revId": "18d7a7658a92cf572500a94703c9aab1a38ae1d5",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    }
  ]
}