{
  "comments": [
    {
      "key": {
        "uuid": "e850b71d_0588321c",
        "filename": "auth/grpcauth/all_test.go",
        "patchSetId": 5
      },
      "lineNbr": 104,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-19T00:29:09Z",
      "side": 1,
      "message": "shouldn\u0027t this CacheConfigure? confused\n\nand why does this introduce the proto dependency, when the rest of the tests use prototest? weird",
      "revId": "87e0c83b00bc64264796e1d247d6a415cf43c9a4",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e850b71d_a596fe3a",
        "filename": "auth/grpcauth/all_test.go",
        "patchSetId": 5
      },
      "lineNbr": 104,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-08-19T00:32:38Z",
      "side": 1,
      "message": "i too am confused by this.",
      "parentUuid": "e850b71d_0588321c",
      "revId": "87e0c83b00bc64264796e1d247d6a415cf43c9a4",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb27a396_09c2eda3",
        "filename": "auth/grpcauth/all_test.go",
        "patchSetId": 5
      },
      "lineNbr": 104,
      "author": {
        "id": 5010
      },
      "writtenOn": "2016-08-19T00:59:10Z",
      "side": 1,
      "message": "You are only confused because the maze of twisty little passages is beyond belief.\n\n1) CacheConfig is a client method and does not go across the wire.  It does however use the GRCP Configure and Authenticate from proto (not testproto) though.  Only peripherally relevant here.\n\n2) Because of (1) I had to add Configure to the GRPCCommon interface required in auth/grpcauth/client.go i.e., it now has to have a proto GRPC Configure method in addition to Authenticate and Ping.  To make the TestServer client be conformant, I had to add a Configure routine to its grpc Service definition.  However, doing that also requires a Configure routine defined for the server (since the pb generator creates definitions for both sides).  All other servers already have one defined but the poor test service did not.  Hence I had to add one.  It uses the proto config because that\u0027s where the Configure messages are defined.\n\nThis was hard to figure out at 1 in the morning after a glass or two of wine.",
      "parentUuid": "e850b71d_0588321c",
      "revId": "87e0c83b00bc64264796e1d247d6a415cf43c9a4",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e850b71d_25832e04",
        "filename": "auth/grpcauth/client.go",
        "patchSetId": 5
      },
      "lineNbr": 281,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-19T00:29:09Z",
      "side": 1,
      "message": "const op \u003d \"CacheConfigure\"",
      "revId": "87e0c83b00bc64264796e1d247d6a415cf43c9a4",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e850b71d_c589fa20",
        "filename": "auth/grpcauth/client.go",
        "patchSetId": 5
      },
      "lineNbr": 281,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-08-19T00:32:38Z",
      "side": 1,
      "message": "const op \u003d \"AuthClientService.CacheConfigure\"?",
      "parentUuid": "e850b71d_25832e04",
      "revId": "87e0c83b00bc64264796e1d247d6a415cf43c9a4",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb27a396_c93295a3",
        "filename": "auth/grpcauth/client.go",
        "patchSetId": 5
      },
      "lineNbr": 281,
      "author": {
        "id": 5010
      },
      "writtenOn": "2016-08-19T00:59:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e850b71d_c589fa20",
      "revId": "87e0c83b00bc64264796e1d247d6a415cf43c9a4",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e850b71d_457e2a10",
        "filename": "store/remote/remote.go",
        "patchSetId": 5
      },
      "lineNbr": 120,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-19T00:29:09Z",
      "side": 1,
      "message": "add a TODO about re-enabling TLS here once we have the self-signed cert story sorted?\nI think we should verify the services we\u0027re communicating with, even locally",
      "revId": "87e0c83b00bc64264796e1d247d6a415cf43c9a4",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb27a396_89e5fd0c",
        "filename": "store/remote/remote.go",
        "patchSetId": 5
      },
      "lineNbr": 120,
      "author": {
        "id": 5010
      },
      "writtenOn": "2016-08-19T00:59:10Z",
      "side": 1,
      "message": "Actually I was intending not to do it.  Having everyone have to create a self signed certificate for something that doesn\u0027t require TLS is just stupid.",
      "parentUuid": "e850b71d_457e2a10",
      "revId": "87e0c83b00bc64264796e1d247d6a415cf43c9a4",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb27a396_0f6aede6",
        "filename": "store/remote/remote.go",
        "patchSetId": 5
      },
      "lineNbr": 120,
      "author": {
        "id": 5025
      },
      "writtenOn": "2016-08-19T05:06:57Z",
      "side": 1,
      "message": "I concur with Dave that we don\u0027t want TLS for intra-machine connections.   We all agree we do want to verify the service we\u0027re communicating with, hence the supplement of the Authenticate message with Configure, so that the client knows for sure which server identity it is talking to.\n\nPerhaps what you\u0027re saying here is that you\u0027d also like the server to give its type \"storecache\" as part of that signed Configure reply?  That seems to me a good suggestion.",
      "parentUuid": "e850b71d_457e2a10",
      "revId": "87e0c83b00bc64264796e1d247d6a415cf43c9a4",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e850b71d_65792626",
        "filename": "upspin/proto/upspin.proto",
        "patchSetId": 5
      },
      "lineNbr": 45,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-19T00:29:09Z",
      "side": 1,
      "message": "should there be a corresponding change to upspin.Service?",
      "revId": "87e0c83b00bc64264796e1d247d6a415cf43c9a4",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb27a396_e9f4b1bf",
        "filename": "upspin/proto/upspin.proto",
        "patchSetId": 5
      },
      "lineNbr": 45,
      "author": {
        "id": 5010
      },
      "writtenOn": "2016-08-19T00:59:10Z",
      "side": 1,
      "message": "There should.  Kind of surprised that nothing forced me to do it.  Got to go figure that out.",
      "parentUuid": "e850b71d_65792626",
      "revId": "87e0c83b00bc64264796e1d247d6a415cf43c9a4",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e850b71d_05da721c",
        "filename": "upspin/proto/upspin.proto",
        "patchSetId": 5
      },
      "lineNbr": 45,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-08-19T01:12:54Z",
      "side": 1,
      "message": "The type system never connects the protos to the service. That\u0027s true in C++ as well. The service just takes the argument *proto.ConfigureResponse, and if it has a field it doesn\u0027t know about, no machinery will notice. It\u0027s just an unused field.\n\nNothing surprising there, really.",
      "parentUuid": "fb27a396_e9f4b1bf",
      "revId": "87e0c83b00bc64264796e1d247d6a415cf43c9a4",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    }
  ]
}