{
  "comments": [
    {
      "key": {
        "uuid": "650f92e3_1c89591f",
        "filename": "dir/server/server.go",
        "patchSetId": 1
      },
      "lineNbr": 340,
      "author": {
        "id": 5010
      },
      "writtenOn": "2016-08-29T20:04:22Z",
      "side": 1,
      "message": "Looks like the put of a nonexistent file can have any Sequence number including negative.  Do we really wan that?",
      "range": {
        "startLine": 336,
        "startChar": 1,
        "endLine": 340,
        "endChar": 3
      },
      "revId": "9e1fec7ac69b4006b9ac84be02ceedc04bea12db",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "650f92e3_9cf7298a",
        "filename": "dir/server/server.go",
        "patchSetId": 1
      },
      "lineNbr": 340,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-29T20:14:10Z",
      "side": 1,
      "message": "Line 319 calls valid.DirEntry and that verifies that:\n\nif entry.Sequence \u003c 0 \u0026\u0026 entry.Sequence !\u003d upspin.SeqNotExist {\n\t\treturn errors.E(op, entry.Name, errors.Errorf(\"negative sequence number %d\", entry.Sequence))\n\t}",
      "parentUuid": "650f92e3_1c89591f",
      "revId": "9e1fec7ac69b4006b9ac84be02ceedc04bea12db",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "650f92e3_5cde3104",
        "filename": "dir/server/server.go",
        "patchSetId": 1
      },
      "lineNbr": 340,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-29T20:15:53Z",
      "side": 1,
      "message": "Oh, and I think we should accept any random number if the user really wants to start at 123, I think it\u0027s fine. But I\u0027m happy to add a check if that\u0027s not fine. (I think we allow it so the user can create backups and stuff like that).",
      "parentUuid": "650f92e3_9cf7298a",
      "revId": "9e1fec7ac69b4006b9ac84be02ceedc04bea12db",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6523123b_b916df4e",
        "filename": "dir/server/server.go",
        "patchSetId": 1
      },
      "lineNbr": 340,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-08-29T20:34:51Z",
      "side": 1,
      "message": "I think it\u0027s probably OK.",
      "parentUuid": "650f92e3_5cde3104",
      "revId": "9e1fec7ac69b4006b9ac84be02ceedc04bea12db",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "650f92e3_5c9631e5",
        "filename": "dir/server/server.go",
        "patchSetId": 1
      },
      "lineNbr": 340,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-29T20:48:30Z",
      "side": 1,
      "message": "Dave is right though. We\u0027re not converting from SeqIgnore and SeqNotExist to SeqBase. For files, we need to do this here. For dirs, the Tree takes care of that.\n\nFixed.",
      "parentUuid": "6523123b_b916df4e",
      "revId": "9e1fec7ac69b4006b9ac84be02ceedc04bea12db",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6523123b_591c636d",
        "filename": "dir/server/server.go",
        "patchSetId": 1
      },
      "lineNbr": 351,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-08-29T20:34:51Z",
      "side": 1,
      "message": "this test achieves the same as the one above.",
      "revId": "9e1fec7ac69b4006b9ac84be02ceedc04bea12db",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "650f92e3_fc5d8554",
        "filename": "dir/server/server.go",
        "patchSetId": 1
      },
      "lineNbr": 351,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-29T20:48:30Z",
      "side": 1,
      "message": "But the error is different for roots. The test above is more restrictive.",
      "parentUuid": "6523123b_591c636d",
      "revId": "9e1fec7ac69b4006b9ac84be02ceedc04bea12db",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6523123b_7919277c",
        "filename": "dir/server/server.go",
        "patchSetId": 1
      },
      "lineNbr": 355,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-08-29T20:34:51Z",
      "side": 1,
      "message": "s/Exist/IsDir/ ?",
      "revId": "9e1fec7ac69b4006b9ac84be02ceedc04bea12db",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "650f92e3_dc624112",
        "filename": "dir/server/server.go",
        "patchSetId": 1
      },
      "lineNbr": 355,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-29T20:48:30Z",
      "side": 1,
      "message": "No, this is checking whether we\u0027re overwriting an existing file with a new directory.",
      "parentUuid": "6523123b_7919277c",
      "revId": "9e1fec7ac69b4006b9ac84be02ceedc04bea12db",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    }
  ]
}