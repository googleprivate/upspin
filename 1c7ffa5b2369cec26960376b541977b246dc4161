{
  "comments": [
    {
      "key": {
        "uuid": "dbf1ff14_bd793f2a",
        "filename": "dir/server/tree/all_test.go",
        "patchSetId": 2
      },
      "lineNbr": 413,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-18T00:18:13Z",
      "side": 1,
      "message": "s/subdir/dir/ ?\nthey\u0027re all directories",
      "revId": "1c7ffa5b2369cec26960376b541977b246dc4161",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb316383_19d34f61",
        "filename": "dir/server/tree/all_test.go",
        "patchSetId": 2
      },
      "lineNbr": 413,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-18T00:38:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dbf1ff14_bd793f2a",
      "revId": "1c7ffa5b2369cec26960376b541977b246dc4161",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9baf87ac_db0053d8",
        "filename": "dir/server/tree/tree.go",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-08-17T23:50:52Z",
      "side": 1,
      "message": "i think you need the boolean flag here too",
      "revId": "1c7ffa5b2369cec26960376b541977b246dc4161",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb316383_b93d7be2",
        "filename": "dir/server/tree/tree.go",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-18T00:06:44Z",
      "side": 1,
      "message": "Servers don\u0027t need to resolve links, right? The client will do that.\n\nUnless you\u0027re referring to links to this dir itself. But that\u0027s not always possible to resolve from a pathname, right? \n\nIn summary, I don\u0027t think I need a boolean here. \n\nCheck the tests, they cover all possible cases now. I\u0027ve added the only missing one which is Lookup the link itself (the case you mentioned below and was covered, indirectly by Delete, but is now explicit).\n\nThanks.",
      "parentUuid": "9baf87ac_db0053d8",
      "revId": "1c7ffa5b2369cec26960376b541977b246dc4161",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbfa8bf0_9c7e050e",
        "filename": "dir/server/tree/tree.go",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-18T00:18:13Z",
      "side": 1,
      "message": "\u0027overwrites into\u0027 seems ungrammatical to me. how bout:\n\nPut puts an entry in the Tree.\nIf the entry exists, it will be overwritten.",
      "revId": "1c7ffa5b2369cec26960376b541977b246dc4161",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb316383_f9469329",
        "filename": "dir/server/tree/tree.go",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-18T00:38:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bbfa8bf0_9c7e050e",
      "revId": "1c7ffa5b2369cec26960376b541977b246dc4161",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbfa8bf0_fc83c9ff",
        "filename": "dir/server/tree/treeimpl.go",
        "patchSetId": 2
      },
      "lineNbr": 131,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-18T00:18:13Z",
      "side": 1,
      "message": "It\u0027s probably about time we did away with the Tree interface and just made tree the exported type Tree.",
      "revId": "1c7ffa5b2369cec26960376b541977b246dc4161",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb316383_b91edb17",
        "filename": "dir/server/tree/treeimpl.go",
        "patchSetId": 2
      },
      "lineNbr": 131,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-18T00:38:32Z",
      "side": 1,
      "message": "Sure, but I\u0027d rather do it in another CL. Rationale:\n- It will involve a filename change and some code movement.\n- The intention of this CL gets murkier the more we do here.\n- I\u0027d like to delete the interface in another 2 or 3 CLs when I\u0027ll be sure I won\u0027t need to mock the Tree for testing the server. I still think it might come in handy for error tests, such as when the tree lcorrupts data, forgets things, etc.\n\nThanks.",
      "parentUuid": "bbfa8bf0_fc83c9ff",
      "revId": "1c7ffa5b2369cec26960376b541977b246dc4161",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbfa8bf0_5c959d30",
        "filename": "dir/server/tree/treeimpl.go",
        "patchSetId": 2
      },
      "lineNbr": 131,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-18T00:41:34Z",
      "side": 1,
      "message": "Agree, I should have mentioned that it should happen in a separate CL. Mechanical changes should always be separate to semantic changes.",
      "parentUuid": "fb316383_b91edb17",
      "revId": "1c7ffa5b2369cec26960376b541977b246dc4161",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9baf87ac_fbfb0fdf",
        "filename": "dir/server/tree/treeimpl.go",
        "patchSetId": 2
      },
      "lineNbr": 195,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-08-17T23:50:52Z",
      "side": 1,
      "message": "i wouldn\u0027t expect this to be possible if loadPath returned ErrFollowLink.\nthere is a subtle thing about links: whether or not you want a link in the last\nelement to step through the link. loadPath might need a flag, like in client.Lookup,\nto control that",
      "revId": "1c7ffa5b2369cec26960376b541977b246dc4161",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb316383_d9a87724",
        "filename": "dir/server/tree/treeimpl.go",
        "patchSetId": 2
      },
      "lineNbr": 195,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-18T00:06:44Z",
      "side": 1,
      "message": "loadPath only returns ErrFollowLink if an interim element is a link. If it\u0027s the last one, it will return it.\n\nThe check here is necessary because I\u0027m putting an element under the parent and it\u0027s a link, it should return to the user with ErrFollowLink.\n\nThe boolean is not needed by servers. Servers only resolve the links locally.",
      "parentUuid": "9baf87ac_fbfb0fdf",
      "revId": "1c7ffa5b2369cec26960376b541977b246dc4161",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbfa8bf0_dc888d1d",
        "filename": "dir/server/tree/treeimpl.go",
        "patchSetId": 2
      },
      "lineNbr": 195,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-18T00:18:13Z",
      "side": 1,
      "message": "It would be good to document this behavior of loadPath/loadNode wrt links, as it differs from the exported interface and is easy to misunderstand.",
      "parentUuid": "fb316383_d9a87724",
      "revId": "1c7ffa5b2369cec26960376b541977b246dc4161",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb316383_f93d3373",
        "filename": "dir/server/tree/treeimpl.go",
        "patchSetId": 2
      },
      "lineNbr": 195,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-18T00:38:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bbfa8bf0_dc888d1d",
      "revId": "1c7ffa5b2369cec26960376b541977b246dc4161",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbfa8bf0_3c8ed126",
        "filename": "dir/server/tree/treeimpl.go",
        "patchSetId": 2
      },
      "lineNbr": 391,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-18T00:18:13Z",
      "side": 1,
      "message": "so creating a root causes a flush of everything?\nI wonder how often we\u0027ll be creating roots, and whether this will be a problem.",
      "revId": "1c7ffa5b2369cec26960376b541977b246dc4161",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb316383_1904afb3",
        "filename": "dir/server/tree/treeimpl.go",
        "patchSetId": 2
      },
      "lineNbr": 391,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-18T00:38:32Z",
      "side": 1,
      "message": "Yes and no. Yes, everything is flushed for this user. No, because nothing exists prior to the root.\n\nThe cost problem is something I worried about too, but creating a root involves creating an entry in the key server and so many other things and it\u0027s done once for the lifetime of a user. Likely it will be done entirely offline by the web service that creates users or the email exchange mechanism discussed a while back.\n\nI\u0027ve clarified the comment.\n\nTo be sure: I implemented about 80% of root recovery for this very reason, and found the complexities involved not worth saving a flush for.",
      "parentUuid": "bbfa8bf0_3c8ed126",
      "revId": "1c7ffa5b2369cec26960376b541977b246dc4161",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbfa8bf0_bca2e191",
        "filename": "dir/server/tree/treeimpl.go",
        "patchSetId": 2
      },
      "lineNbr": 391,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-18T00:41:34Z",
      "side": 1,
      "message": "Oh cool, if it\u0027s just flushing for this user then that\u0027s fine. I think it\u0027s reasonable for creating a root to only reply once the action has been flushed to permanent storage.",
      "parentUuid": "fb316383_1904afb3",
      "revId": "1c7ffa5b2369cec26960376b541977b246dc4161",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbfa8bf0_1c8b1517",
        "filename": "dir/server/tree/treeimpl.go",
        "patchSetId": 2
      },
      "lineNbr": 565,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-18T00:18:13Z",
      "side": 1,
      "message": "please move this declaration to directly before the ReadAt call, otherwise it looks like it is used at this scope level when it is not.",
      "revId": "1c7ffa5b2369cec26960376b541977b246dc4161",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb316383_59a8e785",
        "filename": "dir/server/tree/treeimpl.go",
        "patchSetId": 2
      },
      "lineNbr": 565,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-18T00:38:32Z",
      "side": 1,
      "message": "Done (my worry here is that there would be a cost associated with the declaration of the var and it\u0027s in a loop. But I guess  you\u0027re asserting that the compiler is smart or, even better, there\u0027s no code emitted at the declaration point. Which one is it?",
      "parentUuid": "bbfa8bf0_1c8b1517",
      "revId": "1c7ffa5b2369cec26960376b541977b246dc4161",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbfa8bf0_9ca725a2",
        "filename": "dir/server/tree/treeimpl.go",
        "patchSetId": 2
      },
      "lineNbr": 565,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-18T00:41:34Z",
      "side": 1,
      "message": "the compiler is smart enough that it doesn\u0027t care where you declare the var.\nin any case, even if it wasn\u0027t smart enough, i\u0027d make the argument on style grounds anyway as what you\u0027re doing here is 2-4 orders of magnitude more expensive than a stack variable.",
      "parentUuid": "fb316383_59a8e785",
      "revId": "1c7ffa5b2369cec26960376b541977b246dc4161",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    }
  ]
}