{
  "comments": [
    {
      "key": {
        "uuid": "10ad446a_f92911f8",
        "filename": "dir/server/tree/watch.go",
        "patchSetId": 14
      },
      "lineNbr": 43,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-11-15T22:49:52Z",
      "side": 1,
      "message": "s/ch/events/",
      "revId": "9e9a3628ba8e856ec2ceb5199a3e91c244cdfa69",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10ad446a_b9cf1916",
        "filename": "dir/server/tree/watch.go",
        "patchSetId": 14
      },
      "lineNbr": 327,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-11-15T22:49:52Z",
      "side": 1,
      "message": "that\u0027s a lot of work we can avoid some of. i\u0027m not even sure it\u0027s right. can you arrange that pref always ends in a slash?\n\nif not, maybe:\n\nif !strings.HasPrefix(p, pref) { return false }\n// Make sure we are at a path element boundary.\nreturn pref[len(pref)-1] \u003d\u003d \u0027/\u0027 || p[len(pref)] \u003d\u003d \u0027/\u0027",
      "revId": "9e9a3628ba8e856ec2ceb5199a3e91c244cdfa69",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    }
  ]
}