// Code generated by protoc-gen-go.
// source: upspin.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	upspin.proto

It has these top-level messages:
	Endpoint
	Location
	Signature
	ConfigureRequest
	ConfigureResponse
	EndpointRequest
	EndpointResponse
	PingRequest
	PingResponse
	StoreGetRequest
	StoreGetResponse
	StorePutRequest
	StorePutResponse
	StoreDeleteRequest
	StoreDeleteResponse
	User
	KeyLookupRequest
	KeyLookupResponse
	KeyPutRequest
	KeyPutResponse
	EntryError
	EntriesError
	DirLookupRequest
	DirPutRequest
	DirGlobRequest
	DirDeleteRequest
	DirWhichAccessRequest
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

// Endpoint mirrors upspin.Endpoint.
type Endpoint struct {
	Transport int32  `protobuf:"varint,1,opt,name=transport" json:"transport,omitempty"`
	NetAddr   string `protobuf:"bytes,2,opt,name=net_addr,json=netAddr" json:"net_addr,omitempty"`
}

func (m *Endpoint) Reset()                    { *m = Endpoint{} }
func (m *Endpoint) String() string            { return proto1.CompactTextString(m) }
func (*Endpoint) ProtoMessage()               {}
func (*Endpoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Location mirrors upspin.Location.
type Location struct {
	Endpoint  *Endpoint `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint,omitempty"`
	Reference string    `protobuf:"bytes,2,opt,name=reference" json:"reference,omitempty"`
}

func (m *Location) Reset()                    { *m = Location{} }
func (m *Location) String() string            { return proto1.CompactTextString(m) }
func (*Location) ProtoMessage()               {}
func (*Location) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Location) GetEndpoint() *Endpoint {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

type Signature struct {
	R string `protobuf:"bytes,1,opt,name=r" json:"r,omitempty"`
	S string `protobuf:"bytes,2,opt,name=s" json:"s,omitempty"`
}

func (m *Signature) Reset()                    { *m = Signature{} }
func (m *Signature) String() string            { return proto1.CompactTextString(m) }
func (*Signature) ProtoMessage()               {}
func (*Signature) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type ConfigureRequest struct {
	Options []string `protobuf:"bytes,1,rep,name=options" json:"options,omitempty"`
}

func (m *ConfigureRequest) Reset()                    { *m = ConfigureRequest{} }
func (m *ConfigureRequest) String() string            { return proto1.CompactTextString(m) }
func (*ConfigureRequest) ProtoMessage()               {}
func (*ConfigureRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type ConfigureResponse struct {
	Error     []byte     `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	UserName  string     `protobuf:"bytes,2,opt,name=user_name,json=userName" json:"user_name,omitempty"`
	Signature *Signature `protobuf:"bytes,3,opt,name=signature" json:"signature,omitempty"`
}

func (m *ConfigureResponse) Reset()                    { *m = ConfigureResponse{} }
func (m *ConfigureResponse) String() string            { return proto1.CompactTextString(m) }
func (*ConfigureResponse) ProtoMessage()               {}
func (*ConfigureResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ConfigureResponse) GetSignature() *Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

type EndpointRequest struct {
}

func (m *EndpointRequest) Reset()                    { *m = EndpointRequest{} }
func (m *EndpointRequest) String() string            { return proto1.CompactTextString(m) }
func (*EndpointRequest) ProtoMessage()               {}
func (*EndpointRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type EndpointResponse struct {
	Endpoint *Endpoint `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint,omitempty"`
}

func (m *EndpointResponse) Reset()                    { *m = EndpointResponse{} }
func (m *EndpointResponse) String() string            { return proto1.CompactTextString(m) }
func (*EndpointResponse) ProtoMessage()               {}
func (*EndpointResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *EndpointResponse) GetEndpoint() *Endpoint {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

type PingRequest struct {
	PingSequence int32 `protobuf:"varint,1,opt,name=ping_sequence,json=pingSequence" json:"ping_sequence,omitempty"`
}

func (m *PingRequest) Reset()                    { *m = PingRequest{} }
func (m *PingRequest) String() string            { return proto1.CompactTextString(m) }
func (*PingRequest) ProtoMessage()               {}
func (*PingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type PingResponse struct {
	PingSequence int32 `protobuf:"varint,1,opt,name=ping_sequence,json=pingSequence" json:"ping_sequence,omitempty"`
}

func (m *PingResponse) Reset()                    { *m = PingResponse{} }
func (m *PingResponse) String() string            { return proto1.CompactTextString(m) }
func (*PingResponse) ProtoMessage()               {}
func (*PingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type StoreGetRequest struct {
	Reference string `protobuf:"bytes,1,opt,name=reference" json:"reference,omitempty"`
}

func (m *StoreGetRequest) Reset()                    { *m = StoreGetRequest{} }
func (m *StoreGetRequest) String() string            { return proto1.CompactTextString(m) }
func (*StoreGetRequest) ProtoMessage()               {}
func (*StoreGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type StoreGetResponse struct {
	Data      []byte      `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Locations []*Location `protobuf:"bytes,2,rep,name=locations" json:"locations,omitempty"`
	Error     []byte      `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (m *StoreGetResponse) Reset()                    { *m = StoreGetResponse{} }
func (m *StoreGetResponse) String() string            { return proto1.CompactTextString(m) }
func (*StoreGetResponse) ProtoMessage()               {}
func (*StoreGetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *StoreGetResponse) GetLocations() []*Location {
	if m != nil {
		return m.Locations
	}
	return nil
}

type StorePutRequest struct {
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *StorePutRequest) Reset()                    { *m = StorePutRequest{} }
func (m *StorePutRequest) String() string            { return proto1.CompactTextString(m) }
func (*StorePutRequest) ProtoMessage()               {}
func (*StorePutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

type StorePutResponse struct {
	Reference string `protobuf:"bytes,1,opt,name=reference" json:"reference,omitempty"`
	Error     []byte `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (m *StorePutResponse) Reset()                    { *m = StorePutResponse{} }
func (m *StorePutResponse) String() string            { return proto1.CompactTextString(m) }
func (*StorePutResponse) ProtoMessage()               {}
func (*StorePutResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type StoreDeleteRequest struct {
	Reference string `protobuf:"bytes,1,opt,name=reference" json:"reference,omitempty"`
}

func (m *StoreDeleteRequest) Reset()                    { *m = StoreDeleteRequest{} }
func (m *StoreDeleteRequest) String() string            { return proto1.CompactTextString(m) }
func (*StoreDeleteRequest) ProtoMessage()               {}
func (*StoreDeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

type StoreDeleteResponse struct {
	Error []byte `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (m *StoreDeleteResponse) Reset()                    { *m = StoreDeleteResponse{} }
func (m *StoreDeleteResponse) String() string            { return proto1.CompactTextString(m) }
func (*StoreDeleteResponse) ProtoMessage()               {}
func (*StoreDeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

type User struct {
	Name      string      `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Dirs      []*Endpoint `protobuf:"bytes,2,rep,name=dirs" json:"dirs,omitempty"`
	Stores    []*Endpoint `protobuf:"bytes,3,rep,name=stores" json:"stores,omitempty"`
	PublicKey string      `protobuf:"bytes,4,opt,name=public_key,json=publicKey" json:"public_key,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto1.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *User) GetDirs() []*Endpoint {
	if m != nil {
		return m.Dirs
	}
	return nil
}

func (m *User) GetStores() []*Endpoint {
	if m != nil {
		return m.Stores
	}
	return nil
}

type KeyLookupRequest struct {
	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName" json:"user_name,omitempty"`
}

func (m *KeyLookupRequest) Reset()                    { *m = KeyLookupRequest{} }
func (m *KeyLookupRequest) String() string            { return proto1.CompactTextString(m) }
func (*KeyLookupRequest) ProtoMessage()               {}
func (*KeyLookupRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

type KeyLookupResponse struct {
	User  *User  `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Error []byte `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (m *KeyLookupResponse) Reset()                    { *m = KeyLookupResponse{} }
func (m *KeyLookupResponse) String() string            { return proto1.CompactTextString(m) }
func (*KeyLookupResponse) ProtoMessage()               {}
func (*KeyLookupResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *KeyLookupResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type KeyPutRequest struct {
	User *User `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *KeyPutRequest) Reset()                    { *m = KeyPutRequest{} }
func (m *KeyPutRequest) String() string            { return proto1.CompactTextString(m) }
func (*KeyPutRequest) ProtoMessage()               {}
func (*KeyPutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *KeyPutRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type KeyPutResponse struct {
	Error []byte `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (m *KeyPutResponse) Reset()                    { *m = KeyPutResponse{} }
func (m *KeyPutResponse) String() string            { return proto1.CompactTextString(m) }
func (*KeyPutResponse) ProtoMessage()               {}
func (*KeyPutResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

type EntryError struct {
	Entry []byte `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	Error []byte `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (m *EntryError) Reset()                    { *m = EntryError{} }
func (m *EntryError) String() string            { return proto1.CompactTextString(m) }
func (*EntryError) ProtoMessage()               {}
func (*EntryError) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

type EntriesError struct {
	Entries [][]byte `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	Error   []byte   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (m *EntriesError) Reset()                    { *m = EntriesError{} }
func (m *EntriesError) String() string            { return proto1.CompactTextString(m) }
func (*EntriesError) ProtoMessage()               {}
func (*EntriesError) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

type DirLookupRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *DirLookupRequest) Reset()                    { *m = DirLookupRequest{} }
func (m *DirLookupRequest) String() string            { return proto1.CompactTextString(m) }
func (*DirLookupRequest) ProtoMessage()               {}
func (*DirLookupRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

type DirPutRequest struct {
	Entry []byte `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (m *DirPutRequest) Reset()                    { *m = DirPutRequest{} }
func (m *DirPutRequest) String() string            { return proto1.CompactTextString(m) }
func (*DirPutRequest) ProtoMessage()               {}
func (*DirPutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

type DirGlobRequest struct {
	Pattern string `protobuf:"bytes,1,opt,name=pattern" json:"pattern,omitempty"`
}

func (m *DirGlobRequest) Reset()                    { *m = DirGlobRequest{} }
func (m *DirGlobRequest) String() string            { return proto1.CompactTextString(m) }
func (*DirGlobRequest) ProtoMessage()               {}
func (*DirGlobRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

type DirDeleteRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *DirDeleteRequest) Reset()                    { *m = DirDeleteRequest{} }
func (m *DirDeleteRequest) String() string            { return proto1.CompactTextString(m) }
func (*DirDeleteRequest) ProtoMessage()               {}
func (*DirDeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

type DirWhichAccessRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *DirWhichAccessRequest) Reset()                    { *m = DirWhichAccessRequest{} }
func (m *DirWhichAccessRequest) String() string            { return proto1.CompactTextString(m) }
func (*DirWhichAccessRequest) ProtoMessage()               {}
func (*DirWhichAccessRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func init() {
	proto1.RegisterType((*Endpoint)(nil), "proto.Endpoint")
	proto1.RegisterType((*Location)(nil), "proto.Location")
	proto1.RegisterType((*Signature)(nil), "proto.Signature")
	proto1.RegisterType((*ConfigureRequest)(nil), "proto.ConfigureRequest")
	proto1.RegisterType((*ConfigureResponse)(nil), "proto.ConfigureResponse")
	proto1.RegisterType((*EndpointRequest)(nil), "proto.EndpointRequest")
	proto1.RegisterType((*EndpointResponse)(nil), "proto.EndpointResponse")
	proto1.RegisterType((*PingRequest)(nil), "proto.PingRequest")
	proto1.RegisterType((*PingResponse)(nil), "proto.PingResponse")
	proto1.RegisterType((*StoreGetRequest)(nil), "proto.StoreGetRequest")
	proto1.RegisterType((*StoreGetResponse)(nil), "proto.StoreGetResponse")
	proto1.RegisterType((*StorePutRequest)(nil), "proto.StorePutRequest")
	proto1.RegisterType((*StorePutResponse)(nil), "proto.StorePutResponse")
	proto1.RegisterType((*StoreDeleteRequest)(nil), "proto.StoreDeleteRequest")
	proto1.RegisterType((*StoreDeleteResponse)(nil), "proto.StoreDeleteResponse")
	proto1.RegisterType((*User)(nil), "proto.User")
	proto1.RegisterType((*KeyLookupRequest)(nil), "proto.KeyLookupRequest")
	proto1.RegisterType((*KeyLookupResponse)(nil), "proto.KeyLookupResponse")
	proto1.RegisterType((*KeyPutRequest)(nil), "proto.KeyPutRequest")
	proto1.RegisterType((*KeyPutResponse)(nil), "proto.KeyPutResponse")
	proto1.RegisterType((*EntryError)(nil), "proto.EntryError")
	proto1.RegisterType((*EntriesError)(nil), "proto.EntriesError")
	proto1.RegisterType((*DirLookupRequest)(nil), "proto.DirLookupRequest")
	proto1.RegisterType((*DirPutRequest)(nil), "proto.DirPutRequest")
	proto1.RegisterType((*DirGlobRequest)(nil), "proto.DirGlobRequest")
	proto1.RegisterType((*DirDeleteRequest)(nil), "proto.DirDeleteRequest")
	proto1.RegisterType((*DirWhichAccessRequest)(nil), "proto.DirWhichAccessRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Store service

type StoreClient interface {
	// Service methods:
	Configure(ctx context.Context, in *ConfigureRequest, opts ...grpc.CallOption) (*ConfigureResponse, error)
	Endpoint(ctx context.Context, in *EndpointRequest, opts ...grpc.CallOption) (*EndpointResponse, error)
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	Get(ctx context.Context, in *StoreGetRequest, opts ...grpc.CallOption) (*StoreGetResponse, error)
	Put(ctx context.Context, in *StorePutRequest, opts ...grpc.CallOption) (*StorePutResponse, error)
	Delete(ctx context.Context, in *StoreDeleteRequest, opts ...grpc.CallOption) (*StoreDeleteResponse, error)
}

type storeClient struct {
	cc *grpc.ClientConn
}

func NewStoreClient(cc *grpc.ClientConn) StoreClient {
	return &storeClient{cc}
}

func (c *storeClient) Configure(ctx context.Context, in *ConfigureRequest, opts ...grpc.CallOption) (*ConfigureResponse, error) {
	out := new(ConfigureResponse)
	err := grpc.Invoke(ctx, "/proto.Store/Configure", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) Endpoint(ctx context.Context, in *EndpointRequest, opts ...grpc.CallOption) (*EndpointResponse, error) {
	out := new(EndpointResponse)
	err := grpc.Invoke(ctx, "/proto.Store/Endpoint", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := grpc.Invoke(ctx, "/proto.Store/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) Get(ctx context.Context, in *StoreGetRequest, opts ...grpc.CallOption) (*StoreGetResponse, error) {
	out := new(StoreGetResponse)
	err := grpc.Invoke(ctx, "/proto.Store/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) Put(ctx context.Context, in *StorePutRequest, opts ...grpc.CallOption) (*StorePutResponse, error) {
	out := new(StorePutResponse)
	err := grpc.Invoke(ctx, "/proto.Store/Put", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) Delete(ctx context.Context, in *StoreDeleteRequest, opts ...grpc.CallOption) (*StoreDeleteResponse, error) {
	out := new(StoreDeleteResponse)
	err := grpc.Invoke(ctx, "/proto.Store/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Store service

type StoreServer interface {
	// Service methods:
	Configure(context.Context, *ConfigureRequest) (*ConfigureResponse, error)
	Endpoint(context.Context, *EndpointRequest) (*EndpointResponse, error)
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	Get(context.Context, *StoreGetRequest) (*StoreGetResponse, error)
	Put(context.Context, *StorePutRequest) (*StorePutResponse, error)
	Delete(context.Context, *StoreDeleteRequest) (*StoreDeleteResponse, error)
}

func RegisterStoreServer(s *grpc.Server, srv StoreServer) {
	s.RegisterService(&_Store_serviceDesc, srv)
}

func _Store_Configure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).Configure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Store/Configure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).Configure(ctx, req.(*ConfigureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_Endpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EndpointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).Endpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Store/Endpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).Endpoint(ctx, req.(*EndpointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Store/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StoreGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Store/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).Get(ctx, req.(*StoreGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StorePutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Store/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).Put(ctx, req.(*StorePutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StoreDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Store/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).Delete(ctx, req.(*StoreDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Store_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Store",
	HandlerType: (*StoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Configure",
			Handler:    _Store_Configure_Handler,
		},
		{
			MethodName: "Endpoint",
			Handler:    _Store_Endpoint_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _Store_Ping_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Store_Get_Handler,
		},
		{
			MethodName: "Put",
			Handler:    _Store_Put_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Store_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

// Client API for Key service

type KeyClient interface {
	// Service methods:
	Configure(ctx context.Context, in *ConfigureRequest, opts ...grpc.CallOption) (*ConfigureResponse, error)
	Endpoint(ctx context.Context, in *EndpointRequest, opts ...grpc.CallOption) (*EndpointResponse, error)
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	Lookup(ctx context.Context, in *KeyLookupRequest, opts ...grpc.CallOption) (*KeyLookupResponse, error)
	Put(ctx context.Context, in *KeyPutRequest, opts ...grpc.CallOption) (*KeyPutResponse, error)
}

type keyClient struct {
	cc *grpc.ClientConn
}

func NewKeyClient(cc *grpc.ClientConn) KeyClient {
	return &keyClient{cc}
}

func (c *keyClient) Configure(ctx context.Context, in *ConfigureRequest, opts ...grpc.CallOption) (*ConfigureResponse, error) {
	out := new(ConfigureResponse)
	err := grpc.Invoke(ctx, "/proto.Key/Configure", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keyClient) Endpoint(ctx context.Context, in *EndpointRequest, opts ...grpc.CallOption) (*EndpointResponse, error) {
	out := new(EndpointResponse)
	err := grpc.Invoke(ctx, "/proto.Key/Endpoint", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keyClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := grpc.Invoke(ctx, "/proto.Key/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keyClient) Lookup(ctx context.Context, in *KeyLookupRequest, opts ...grpc.CallOption) (*KeyLookupResponse, error) {
	out := new(KeyLookupResponse)
	err := grpc.Invoke(ctx, "/proto.Key/Lookup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keyClient) Put(ctx context.Context, in *KeyPutRequest, opts ...grpc.CallOption) (*KeyPutResponse, error) {
	out := new(KeyPutResponse)
	err := grpc.Invoke(ctx, "/proto.Key/Put", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Key service

type KeyServer interface {
	// Service methods:
	Configure(context.Context, *ConfigureRequest) (*ConfigureResponse, error)
	Endpoint(context.Context, *EndpointRequest) (*EndpointResponse, error)
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	Lookup(context.Context, *KeyLookupRequest) (*KeyLookupResponse, error)
	Put(context.Context, *KeyPutRequest) (*KeyPutResponse, error)
}

func RegisterKeyServer(s *grpc.Server, srv KeyServer) {
	s.RegisterService(&_Key_serviceDesc, srv)
}

func _Key_Configure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyServer).Configure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Key/Configure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyServer).Configure(ctx, req.(*ConfigureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Key_Endpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EndpointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyServer).Endpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Key/Endpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyServer).Endpoint(ctx, req.(*EndpointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Key_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Key/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Key_Lookup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyLookupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyServer).Lookup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Key/Lookup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyServer).Lookup(ctx, req.(*KeyLookupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Key_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyPutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Key/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyServer).Put(ctx, req.(*KeyPutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Key_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Key",
	HandlerType: (*KeyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Configure",
			Handler:    _Key_Configure_Handler,
		},
		{
			MethodName: "Endpoint",
			Handler:    _Key_Endpoint_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _Key_Ping_Handler,
		},
		{
			MethodName: "Lookup",
			Handler:    _Key_Lookup_Handler,
		},
		{
			MethodName: "Put",
			Handler:    _Key_Put_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

// Client API for Dir service

type DirClient interface {
	// Service methods:
	Configure(ctx context.Context, in *ConfigureRequest, opts ...grpc.CallOption) (*ConfigureResponse, error)
	Endpoint(ctx context.Context, in *EndpointRequest, opts ...grpc.CallOption) (*EndpointResponse, error)
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	Lookup(ctx context.Context, in *DirLookupRequest, opts ...grpc.CallOption) (*EntryError, error)
	Put(ctx context.Context, in *DirPutRequest, opts ...grpc.CallOption) (*EntryError, error)
	Glob(ctx context.Context, in *DirGlobRequest, opts ...grpc.CallOption) (*EntriesError, error)
	Delete(ctx context.Context, in *DirDeleteRequest, opts ...grpc.CallOption) (*EntryError, error)
	WhichAccess(ctx context.Context, in *DirWhichAccessRequest, opts ...grpc.CallOption) (*EntryError, error)
}

type dirClient struct {
	cc *grpc.ClientConn
}

func NewDirClient(cc *grpc.ClientConn) DirClient {
	return &dirClient{cc}
}

func (c *dirClient) Configure(ctx context.Context, in *ConfigureRequest, opts ...grpc.CallOption) (*ConfigureResponse, error) {
	out := new(ConfigureResponse)
	err := grpc.Invoke(ctx, "/proto.Dir/Configure", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dirClient) Endpoint(ctx context.Context, in *EndpointRequest, opts ...grpc.CallOption) (*EndpointResponse, error) {
	out := new(EndpointResponse)
	err := grpc.Invoke(ctx, "/proto.Dir/Endpoint", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dirClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := grpc.Invoke(ctx, "/proto.Dir/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dirClient) Lookup(ctx context.Context, in *DirLookupRequest, opts ...grpc.CallOption) (*EntryError, error) {
	out := new(EntryError)
	err := grpc.Invoke(ctx, "/proto.Dir/Lookup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dirClient) Put(ctx context.Context, in *DirPutRequest, opts ...grpc.CallOption) (*EntryError, error) {
	out := new(EntryError)
	err := grpc.Invoke(ctx, "/proto.Dir/Put", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dirClient) Glob(ctx context.Context, in *DirGlobRequest, opts ...grpc.CallOption) (*EntriesError, error) {
	out := new(EntriesError)
	err := grpc.Invoke(ctx, "/proto.Dir/Glob", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dirClient) Delete(ctx context.Context, in *DirDeleteRequest, opts ...grpc.CallOption) (*EntryError, error) {
	out := new(EntryError)
	err := grpc.Invoke(ctx, "/proto.Dir/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dirClient) WhichAccess(ctx context.Context, in *DirWhichAccessRequest, opts ...grpc.CallOption) (*EntryError, error) {
	out := new(EntryError)
	err := grpc.Invoke(ctx, "/proto.Dir/WhichAccess", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Dir service

type DirServer interface {
	// Service methods:
	Configure(context.Context, *ConfigureRequest) (*ConfigureResponse, error)
	Endpoint(context.Context, *EndpointRequest) (*EndpointResponse, error)
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	Lookup(context.Context, *DirLookupRequest) (*EntryError, error)
	Put(context.Context, *DirPutRequest) (*EntryError, error)
	Glob(context.Context, *DirGlobRequest) (*EntriesError, error)
	Delete(context.Context, *DirDeleteRequest) (*EntryError, error)
	WhichAccess(context.Context, *DirWhichAccessRequest) (*EntryError, error)
}

func RegisterDirServer(s *grpc.Server, srv DirServer) {
	s.RegisterService(&_Dir_serviceDesc, srv)
}

func _Dir_Configure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirServer).Configure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dir/Configure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirServer).Configure(ctx, req.(*ConfigureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dir_Endpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EndpointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirServer).Endpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dir/Endpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirServer).Endpoint(ctx, req.(*EndpointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dir_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dir/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dir_Lookup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DirLookupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirServer).Lookup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dir/Lookup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirServer).Lookup(ctx, req.(*DirLookupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dir_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DirPutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dir/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirServer).Put(ctx, req.(*DirPutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dir_Glob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DirGlobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirServer).Glob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dir/Glob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirServer).Glob(ctx, req.(*DirGlobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dir_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DirDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dir/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirServer).Delete(ctx, req.(*DirDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dir_WhichAccess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DirWhichAccessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirServer).WhichAccess(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dir/WhichAccess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirServer).WhichAccess(ctx, req.(*DirWhichAccessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Dir_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Dir",
	HandlerType: (*DirServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Configure",
			Handler:    _Dir_Configure_Handler,
		},
		{
			MethodName: "Endpoint",
			Handler:    _Dir_Endpoint_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _Dir_Ping_Handler,
		},
		{
			MethodName: "Lookup",
			Handler:    _Dir_Lookup_Handler,
		},
		{
			MethodName: "Put",
			Handler:    _Dir_Put_Handler,
		},
		{
			MethodName: "Glob",
			Handler:    _Dir_Glob_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Dir_Delete_Handler,
		},
		{
			MethodName: "WhichAccess",
			Handler:    _Dir_WhichAccess_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto1.RegisterFile("upspin.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 864 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xd4, 0x55, 0xdd, 0x4e, 0xe3, 0x46,
	0x14, 0x8e, 0xe3, 0x24, 0xc4, 0x27, 0x61, 0x49, 0x66, 0x97, 0xae, 0x37, 0xdd, 0xaa, 0x68, 0x56,
	0xfb, 0xa3, 0xd2, 0xb2, 0xdb, 0x2c, 0xaa, 0xb8, 0xa1, 0x05, 0x11, 0x8a, 0xd4, 0xa0, 0x0a, 0x19,
	0xa1, 0x5e, 0x46, 0x26, 0x19, 0xc2, 0x88, 0x30, 0x76, 0x67, 0xec, 0x4a, 0x79, 0x82, 0xbe, 0x4d,
	0x5f, 0xa6, 0x6f, 0xd2, 0x27, 0xa8, 0xc6, 0x33, 0xb6, 0xc7, 0x8e, 0x49, 0xe9, 0x25, 0x57, 0xe4,
	0x9c, 0x39, 0xdf, 0x39, 0xdf, 0xf9, 0xf1, 0x07, 0x74, 0xe3, 0x50, 0x84, 0x94, 0xed, 0x85, 0x3c,
	0x88, 0x02, 0xd4, 0x4c, 0xfe, 0xe0, 0x13, 0x68, 0x9f, 0xb2, 0x59, 0x18, 0x50, 0x16, 0xa1, 0xd7,
	0xe0, 0x44, 0xdc, 0x67, 0x22, 0x0c, 0x78, 0xe4, 0x5a, 0x3b, 0xd6, 0x87, 0xa6, 0x97, 0x3b, 0xd0,
	0x2b, 0x68, 0x33, 0x12, 0x4d, 0xfc, 0xd9, 0x8c, 0xbb, 0xf5, 0x1d, 0xeb, 0x83, 0xe3, 0x6d, 0x30,
	0x12, 0x1d, 0xcf, 0x66, 0x1c, 0x5f, 0x41, 0xfb, 0x3c, 0x98, 0xfa, 0x11, 0x0d, 0x18, 0xda, 0x85,
	0x36, 0xd1, 0x09, 0x93, 0x1c, 0x9d, 0xe1, 0x96, 0xaa, 0xb8, 0x97, 0xd6, 0xf1, 0xb2, 0x00, 0x59,
	0x91, 0x93, 0x1b, 0xc2, 0x09, 0x9b, 0x12, 0x9d, 0x34, 0x77, 0xe0, 0xf7, 0xe0, 0x5c, 0xd2, 0x39,
	0xf3, 0xa3, 0x98, 0x13, 0xd4, 0x05, 0x8b, 0x27, 0x09, 0x1d, 0xcf, 0xe2, 0xd2, 0x12, 0x1a, 0x60,
	0x09, 0xfc, 0x2d, 0xf4, 0x4e, 0x02, 0x76, 0x43, 0xe7, 0x31, 0x27, 0x1e, 0xf9, 0x3d, 0x26, 0x22,
	0x42, 0x2e, 0x6c, 0x04, 0xa1, 0x64, 0x24, 0x5c, 0x6b, 0xc7, 0x96, 0x6c, 0xb5, 0x89, 0xff, 0x80,
	0xbe, 0x11, 0x2d, 0xc2, 0x80, 0x09, 0x82, 0x5e, 0x40, 0x93, 0x70, 0x1e, 0xa8, 0x12, 0x5d, 0x4f,
	0x19, 0xe8, 0x4b, 0x70, 0x62, 0x41, 0xf8, 0x84, 0xf9, 0xf7, 0x29, 0xbf, 0xb6, 0x74, 0xfc, 0xea,
	0xdf, 0x13, 0xb4, 0x07, 0x8e, 0x48, 0xe9, 0xb9, 0x76, 0xd2, 0x6a, 0x4f, 0xb7, 0x9a, 0xd1, 0xf6,
	0xf2, 0x10, 0xdc, 0x87, 0xad, 0x6c, 0x04, 0x8a, 0x24, 0xfe, 0x09, 0x7a, 0xb9, 0x4b, 0x33, 0xf9,
	0x3f, 0x03, 0xc4, 0x43, 0xe8, 0x5c, 0x50, 0x36, 0x4f, 0x9b, 0x7e, 0x03, 0x9b, 0x21, 0x65, 0xf3,
	0x89, 0x90, 0xb6, 0x9c, 0xa9, 0xda, 0x62, 0x57, 0x3a, 0x2f, 0xb5, 0x0f, 0x7f, 0x86, 0xae, 0xc2,
	0xe8, 0x82, 0x8f, 0x02, 0x7d, 0x84, 0xad, 0xcb, 0x28, 0xe0, 0xe4, 0x8c, 0xa4, 0xe4, 0x8b, 0xcb,
	0xb3, 0xca, 0xcb, 0xbb, 0x83, 0x5e, 0x0e, 0xd0, 0x95, 0x10, 0x34, 0x66, 0x7e, 0xe4, 0xeb, 0x19,
	0x27, 0xbf, 0xd1, 0x77, 0xe0, 0x2c, 0xf4, 0xed, 0xc8, 0x8d, 0xda, 0x46, 0xbf, 0xe9, 0x4d, 0x79,
	0x79, 0x44, 0xbe, 0x27, 0xdb, 0xd8, 0x13, 0x7e, 0xab, 0xd9, 0x5d, 0xc4, 0x19, 0xbb, 0x8a, 0x5a,
	0xf8, 0x67, 0xcd, 0x29, 0x09, 0xd3, 0x9c, 0xd6, 0x76, 0x91, 0x97, 0xab, 0x9b, 0xe5, 0x86, 0x80,
	0x92, 0x3c, 0x23, 0xb2, 0x20, 0x11, 0x79, 0xdc, 0x3c, 0x76, 0xe1, 0x79, 0x01, 0xb3, 0xee, 0xee,
	0xf0, 0x9f, 0x16, 0x34, 0xae, 0x04, 0xe1, 0xb2, 0x8b, 0xe4, 0xf6, 0x54, 0xba, 0xe4, 0x37, 0x7a,
	0x03, 0x8d, 0x19, 0xe5, 0xe5, 0x61, 0x65, 0xc7, 0x91, 0x3c, 0xa2, 0xf7, 0xd0, 0x12, 0xb2, 0x9c,
	0x70, 0xed, 0xea, 0x30, 0xfd, 0x8c, 0xbe, 0x02, 0x08, 0xe3, 0xeb, 0x05, 0x9d, 0x4e, 0xee, 0xc8,
	0xd2, 0x6d, 0x28, 0xda, 0xca, 0x33, 0x26, 0x4b, 0xfc, 0x11, 0x7a, 0x63, 0xb2, 0x3c, 0x0f, 0x82,
	0xbb, 0x38, 0x4c, 0x1b, 0x2d, 0x7c, 0x15, 0x56, 0xf1, 0xab, 0xc0, 0xbf, 0x40, 0xdf, 0x00, 0xe8,
	0x2e, 0xbf, 0x86, 0x86, 0x0c, 0xd0, 0xf7, 0xdc, 0xd1, 0x5c, 0x64, 0x87, 0x5e, 0xf2, 0xf0, 0xc0,
	0x9c, 0x3f, 0xc1, 0xe6, 0x98, 0x2c, 0x8d, 0xa5, 0xfe, 0x57, 0x1e, 0xfc, 0x0e, 0x9e, 0xa5, 0x88,
	0xb5, 0x03, 0x3e, 0x00, 0x38, 0x65, 0x11, 0x5f, 0x9e, 0x26, 0x9f, 0xb9, 0x8c, 0x91, 0x56, 0x16,
	0x23, 0x8d, 0x07, 0x38, 0xfd, 0x08, 0x5d, 0x89, 0xa4, 0x44, 0x28, 0xac, 0x0b, 0x1b, 0x44, 0xd9,
	0x89, 0xce, 0x74, 0xbd, 0xd4, 0x7c, 0x00, 0xff, 0x0e, 0x7a, 0x23, 0xca, 0x8b, 0x03, 0xad, 0xd8,
	0x32, 0x7e, 0x0b, 0x9b, 0x23, 0xca, 0x8d, 0xde, 0x2b, 0x49, 0xe2, 0x6f, 0xe0, 0xd9, 0x88, 0xf2,
	0xb3, 0x45, 0x70, 0x6d, 0x08, 0x5f, 0xe8, 0x47, 0x11, 0xe1, 0x4c, 0xe7, 0x4b, 0x4d, 0x5d, 0xba,
	0x78, 0xb4, 0x55, 0xa5, 0x77, 0x61, 0x7b, 0x44, 0xf9, 0x6f, 0xb7, 0x74, 0x7a, 0x7b, 0x3c, 0x9d,
	0x12, 0x21, 0xd6, 0x04, 0x0f, 0xff, 0xa9, 0x43, 0x33, 0x39, 0x6c, 0x74, 0x04, 0x4e, 0xa6, 0xab,
	0xe8, 0xa5, 0xde, 0x4d, 0x59, 0x97, 0x07, 0xee, 0xea, 0x83, 0xda, 0x14, 0xae, 0xa1, 0x43, 0xe3,
	0x9f, 0xd1, 0x17, 0xe5, 0x83, 0xd5, 0xf8, 0x97, 0x2b, 0xfe, 0x0c, 0xfe, 0x3d, 0x34, 0xa4, 0xb0,
	0x21, 0xa4, 0x43, 0x0c, 0x65, 0x1c, 0x3c, 0x2f, 0xf8, 0x32, 0xc8, 0x01, 0xd8, 0x67, 0x24, 0x2f,
	0x56, 0x92, 0xb8, 0xac, 0x58, 0x59, 0xc9, 0x14, 0xf2, 0x22, 0x2e, 0x21, 0xf3, 0x6d, 0x15, 0x91,
	0xc6, 0x3d, 0xe2, 0x1a, 0x3a, 0x86, 0x96, 0xda, 0x01, 0x7a, 0x65, 0x06, 0x15, 0xf6, 0x32, 0x18,
	0x54, 0x3d, 0xa5, 0x29, 0x86, 0x7f, 0xd5, 0xc1, 0x1e, 0x93, 0xe5, 0x93, 0x1c, 0xf9, 0x21, 0xb4,
	0xd4, 0xf5, 0x67, 0x84, 0xcb, 0x02, 0x93, 0x11, 0x5e, 0x11, 0x12, 0x5c, 0x43, 0xfb, 0x6a, 0xee,
	0x2f, 0xf2, 0x10, 0x63, 0xea, 0xdb, 0x25, 0x6f, 0x36, 0xb0, 0xbf, 0x6d, 0xb0, 0x47, 0x94, 0x3f,
	0xc9, 0x81, 0xfd, 0xb0, 0x32, 0xb0, 0xb2, 0x80, 0x0c, 0xfa, 0x59, 0xc1, 0x54, 0xd3, 0x70, 0x0d,
	0x7d, 0x2a, 0x4e, 0xaa, 0xa0, 0x26, 0xd5, 0x88, 0x7d, 0x68, 0x48, 0x25, 0x41, 0xdb, 0x39, 0xc4,
	0x50, 0x96, 0x8c, 0x9f, 0xa9, 0x7f, 0x8a, 0x9f, 0xbe, 0x67, 0x83, 0x5f, 0xf1, 0x9a, 0x2b, 0xab,
	0x1d, 0x41, 0xc7, 0xd0, 0x18, 0xf4, 0x3a, 0x07, 0xaf, 0x4a, 0x4f, 0x65, 0x86, 0xeb, 0x56, 0xe2,
	0xfb, 0xfc, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc1, 0x6f, 0xdd, 0x5e, 0xda, 0x0a, 0x00, 0x00,
}
