{
  "comments": [
    {
      "key": {
        "uuid": "cbfa12f2_7c3a19d3",
        "filename": "client/client.go",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-09-14T21:37:31Z",
      "side": 1,
      "message": "This is wrong, I believe. A link DirEntry should have equivalent Name and SignedName fields. In fact, since we haven\u0027t implemented snapshots yet there is no place that a Name and SignedName should differ in our system.",
      "revId": "0ad5430073bcab6a2f6cf75f7829693a32e1fae1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cbfa12f2_3c409137",
        "filename": "dir/server/all_test.go",
        "patchSetId": 2
      },
      "lineNbr": 150,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-09-14T21:37:31Z",
      "side": 1,
      "message": "This is wrong. The SignedName should be the same as Name for a link. They\u0027re not even signed.",
      "revId": "0ad5430073bcab6a2f6cf75f7829693a32e1fae1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cbfa12f2_1c3dd5c9",
        "filename": "dir/server/all_test.go",
        "patchSetId": 2
      },
      "lineNbr": 511,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-09-14T21:37:31Z",
      "side": 1,
      "message": "ditto",
      "revId": "0ad5430073bcab6a2f6cf75f7829693a32e1fae1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cbfa12f2_fc60e9d7",
        "filename": "upspin/code.go",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-09-14T21:45:24Z",
      "side": 1,
      "message": "Currently, MarshalAppend does not do any validation of the data, so why do we start now? It should be okay to marshal and unmarshal an incomplete direntry. All that matters is that the data that goes in is what comes out again.\n\nTo do the de-duplication of name and signedname, you can use a single byte to indicates whether they are equivalent or not.",
      "revId": "0ad5430073bcab6a2f6cf75f7829693a32e1fae1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cbfa12f2_5c375de7",
        "filename": "upspin/code.go",
        "patchSetId": 2
      },
      "lineNbr": 188,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-09-14T21:37:31Z",
      "side": 1,
      "message": "Can you please put these in the same order they appear in the struct?\n\nIt\u0027s correct up to this point.\nFrom here, it\u0027s Writer, Name, Attr, Sequence.",
      "revId": "0ad5430073bcab6a2f6cf75f7829693a32e1fae1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb55b2ad_815eede0",
        "filename": "upspin/code.go",
        "patchSetId": 2
      },
      "lineNbr": 305,
      "author": {
        "id": 5010
      },
      "writtenOn": "2016-09-14T18:39:27Z",
      "side": 1,
      "message": "Do you need this check?  Won\u0027t the getBytes below return nil,nil in that case?",
      "range": {
        "startLine": 303,
        "startChar": 0,
        "endLine": 305,
        "endChar": 2
      },
      "revId": "0ad5430073bcab6a2f6cf75f7829693a32e1fae1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb55b2ad_24aaa774",
        "filename": "upspin/code.go",
        "patchSetId": 2
      },
      "lineNbr": 305,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-09-14T19:14:56Z",
      "side": 1,
      "message": "You\u0027re right, this is only strictly necessary if I\u0027m looking at a \"required\" field that does not have a \"count\" leading it (and the next entry does have a count leading it).\n\nHowever, the pre-existing nil check is necessary because otherwise we could start reading the next dir entry in a big block (if there is a next one, say in a big dir block). Because dir entries begin with a name, we could unmarshal the *next* SignedName correctly into this entry\u0027s Name field. And if this error pattern persists, we\u0027d only get an error message at the very last block, which would make debugging harder.\n\nGiven that a nil check is necessary and we know we need at least a zero for the next entry, I think this is safer.\n\nI hope this makes sense.",
      "parentUuid": "cb55b2ad_815eede0",
      "range": {
        "startLine": 303,
        "startChar": 0,
        "endLine": 305,
        "endChar": 2
      },
      "revId": "0ad5430073bcab6a2f6cf75f7829693a32e1fae1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cbfa12f2_bc5661fc",
        "filename": "upspin/code.go",
        "patchSetId": 2
      },
      "lineNbr": 305,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-09-14T21:37:31Z",
      "side": 1,
      "message": "If you adopt my suggestion about ordering, above, I think this concern goes away.",
      "parentUuid": "cb55b2ad_24aaa774",
      "revId": "0ad5430073bcab6a2f6cf75f7829693a32e1fae1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    }
  ]
}