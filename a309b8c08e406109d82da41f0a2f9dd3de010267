{
  "comments": [
    {
      "key": {
        "uuid": "9ba2277b_e3ec1223",
        "filename": "dir/server/all_test.go",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-16T23:19:52Z",
      "side": 1,
      "message": "These tests should do a lookup to check that the entry was actually put there",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1bd8f739_e57d52bf",
        "filename": "dir/server/all_test.go",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-16T23:52:23Z",
      "side": 1,
      "message": "Done\nNote: reflect.DeepEqual won\u0027t be true given other things we add when we do a Put/MkDir, such as Time. I won\u0027t compare every field possible here, but am checking a few, such as name, writer.",
      "parentUuid": "9ba2277b_e3ec1223",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ba2277b_a3cffaae",
        "filename": "dir/server/all_test.go",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-17T00:03:12Z",
      "side": 1,
      "message": "In general I prefer not to use DeepEqual as it feels like a blunt instrument when reality is usually more subtle.\nI\u0027d be happy for you to write a small helper function that checks the relevant fields.",
      "parentUuid": "1bd8f739_e57d52bf",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1bd8f739_05d07650",
        "filename": "dir/server/all_test.go",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-17T00:33:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ba2277b_a3cffaae",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ba2277b_639ca2bb",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-16T23:19:52Z",
      "side": 1,
      "message": "why? the lru is thread safe",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1bd8f739_85f00693",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-16T23:52:23Z",
      "side": 1,
      "message": "Because the tree is not thread safe. Locking it before taking the tree from the LRU is a precaution. There\u0027s no point in allowing one to take the tree from the LRU and then take the userlock later.",
      "parentUuid": "9ba2277b_639ca2bb",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ba2277b_4342c618",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-17T00:03:12Z",
      "side": 1,
      "message": "I see. Can you please expand on this comment as to how the locking should be done. State that when adding or getting a user, you should take userLock(user).",
      "parentUuid": "1bd8f739_85f00693",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1bd8f739_e55f12e9",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-17T00:33:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ba2277b_4342c618",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ba2277b_2396aa9b",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-16T23:19:52Z",
      "side": 1,
      "message": "please make this a field in server, rather than a global. otherwise i\u0027ll just have to do it later",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ba2277b_a3f61af1",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-16T23:23:50Z",
      "side": 1,
      "message": "also, the size of this lru should be configurable (through Configure, or—after my change—through a constructor). right now, if there are 1001 active users then cache entries will be continuously evicted, creating a lot of churn.",
      "parentUuid": "9ba2277b_2396aa9b",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1bd8f739_a5e42ad4",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-16T23:52:23Z",
      "side": 1,
      "message": "Why do we have to do later? It\u0027s unlikely we\u0027ll more than one of these in the same address space.\n\nDone.",
      "parentUuid": "9ba2277b_2396aa9b",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1bd8f739_a5698af3",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-16T23:52:23Z",
      "side": 1,
      "message": "Will do.",
      "parentUuid": "9ba2277b_a3f61af1",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ba2277b_6347c227",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-17T00:03:12Z",
      "side": 1,
      "message": "because i\u0027m removing global state from everywhere that makes sense. the server owns this cache, so it should be a field in server. and the lru should only be initialized when someone initializes a server, not merely as a tax for importing this package",
      "parentUuid": "1bd8f739_a5e42ad4",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1bd8f739_45151ef7",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-17T00:33:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ba2277b_6347c227",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ba2277b_03912ea2",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-16T23:19:52Z",
      "side": 1,
      "message": "yeah, please do this. I\u0027ve been making this change in the existing servers where appropriate.",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1bd8f739_45235e0e",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-16T23:52:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ba2277b_03912ea2",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ba2277b_83a43efa",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-16T23:19:52Z",
      "side": 1,
      "message": "you\u0027re not holding the userlock here",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1bd8f739_652862e8",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-16T23:52:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ba2277b_83a43efa",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ba2277b_c3aa36c6",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 91,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-16T23:19:52Z",
      "side": 1,
      "message": "is there a race here?\ncan\u0027t the path become dirty in between the previous tree.Lookup and this one?\nin other words, should this if block be a loop?",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1bd8f739_05395638",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 91,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-16T23:52:23Z",
      "side": 1,
      "message": "No. We\u0027re taking the userLock which prevents that. (see earlier answer to Eric).",
      "parentUuid": "9ba2277b_c3aa36c6",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ba2277b_e3a732fd",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-16T23:19:52Z",
      "side": 1,
      "message": "what does this actually protect? the user tree?",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1bd8f739_25073a79",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-16T23:52:23Z",
      "side": 1,
      "message": "Yes.",
      "parentUuid": "9ba2277b_e3a732fd",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ba2277b_a3a13ae9",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-16T23:19:52Z",
      "side": 1,
      "message": "this seems like an odd check. the caller is in control over both p and entry. when/why does this go wrong? and why not just set entry.Name to p.Path() ?",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1bd8f739_a51a6aca",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-16T23:52:23Z",
      "side": 1,
      "message": "This is exactly what valid.UserName does. Rob said we should not sanitize for users. If we get something bad, we reject it. I\u0027m doing the check here so the callers don\u0027t need to replicate it. This data still comes from the user and we don\u0027t control all client implementations (or those calling our RPC interface directly).",
      "parentUuid": "9ba2277b_a3a13ae9",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ba2277b_034cce46",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-17T00:03:12Z",
      "side": 1,
      "message": "ok, well please make the error message more informative. show the mismatched strings, and include op in the error",
      "parentUuid": "1bd8f739_a51a6aca",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1bd8f739_651a2228",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-17T00:33:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ba2277b_034cce46",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ba2277b_43fc06d8",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 170,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-16T23:19:52Z",
      "side": 1,
      "message": "avoid unnecessary nesting:\n\nif errors.Match(errNotExist, err) {\n  // OK; entry not found as expected.\n} else if err !\u003d nil {\n  // unexpected error\n} else {\n  // path exists; can we overwrite, etc?\n}",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1bd8f739_a55fca7b",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 170,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-16T23:52:23Z",
      "side": 1,
      "message": "Not a fan of empty if blocks.",
      "parentUuid": "9ba2277b_43fc06d8",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ba2277b_c35556ce",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 170,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-17T00:03:12Z",
      "side": 1,
      "message": "you might not be a fan, but there is a sound rationale for this suggestion.\n\nthree things distinct may happen as a result of this call\n\n1. the thing doesn\u0027t exist, that\u0027s fine\n2. an error occurred, that\u0027s not fine\n3. path exists, check if overwrite\n\nreading the current code, it is not clear that there are three outcomes, and the logic for one of the outcomes is inverted (if NOT match errNotExist (\"not not\"), that\u0027s an error).\n\nif you don\u0027t like empty if statements, how about a switch?\n\nswitch {\ncase errors.Match(errNotExist, err):\n  // OK.\ncase err !\u003d nil:\n  // Error\ndefault:\n  // Exists, overwrite.\n}\n\ni suggested this change because i had trouble decoding the logic, not because i have some fetish about indentation.",
      "parentUuid": "1bd8f739_a55fca7b",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1bd8f739_05af968c",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 170,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-17T00:33:38Z",
      "side": 1,
      "message": "I think my style is easier for me to read, because (other than I\u0027m used to it) it\u0027s sequential: \"if err not null, then check whether the error is something else other than NotExist, if err is nil, do something else.\"\n\nBut in name of being a team player, let\u0027s move on.\n\nDone.",
      "parentUuid": "9ba2277b_c35556ce",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ba2277b_03060ef2",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 274,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-16T23:19:52Z",
      "side": 1,
      "message": "errors.Errorf(\"userTrees contained value of unexpected type %T\", val)",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1bd8f739_654f82c5",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 274,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-16T23:52:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ba2277b_03060ef2",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ba2277b_230b0af9",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 281,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-16T23:19:52Z",
      "side": 1,
      "message": "what does \u0027we\u0027re all set\u0027 mean?",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1bd8f739_c545aea3",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 281,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-16T23:52:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ba2277b_230b0af9",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ba2277b_c3ef9615",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 354,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-16T23:19:52Z",
      "side": 1,
      "message": "Debug",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1bd8f739_85c1e601",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 354,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-16T23:52:23Z",
      "side": 1,
      "message": "This is the main path that creates a root. It should be logged so we know which users are creating roots.",
      "parentUuid": "9ba2277b_c3ef9615",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ba2277b_e352d2e3",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 354,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-17T00:03:12Z",
      "side": 1,
      "message": "So Info then?\nIn any case, don\u0027t use the bare log.Print.\nWe need to have the option to control the verbosity of our logging.",
      "parentUuid": "1bd8f739_85c1e601",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1bd8f739_85f566bc",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 354,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-17T00:33:38Z",
      "side": 1,
      "message": "Info is the same as the bare log.Print. I slightly prefer the bare one because it\u0027s easier to read and type. But if you want consistency and more documentation, it can be accommodated.\n\nDone.",
      "parentUuid": "9ba2277b_e352d2e3",
      "revId": "a309b8c08e406109d82da41f0a2f9dd3de010267",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    }
  ]
}