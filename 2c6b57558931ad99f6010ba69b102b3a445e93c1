{
  "comments": [
    {
      "key": {
        "uuid": "0b97d3c5_716c1ae6",
        "filename": "key/gcp/gcp.go",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 5025
      },
      "writtenOn": "2016-11-11T16:17:41Z",
      "side": 1,
      "message": "All since start of this execution of the key server or all since the dawn of time?\n\nFor scalability, perhaps on /log give a checkpoint at (re)start of the logging and then the mutations, but save the archival log to cloud storage somewhere.\n\nWhat you have is fine for version 1, though it would be ideal to pick an API design now that allows a future internal implementation to deal with the eventual large number of keys.",
      "revId": "2c6b57558931ad99f6010ba69b102b3a445e93c1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b1ef349_caf4471b",
        "filename": "key/gcp/gcp.go",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-11-14T04:53:06Z",
      "side": 1,
      "message": "It currently displays all from the beginning of time.\n\nI think I should either just make it paginate/chunk now, or submit as-is. I don\u0027t care which way we go. We can talk about it tomorrow.",
      "parentUuid": "0b97d3c5_716c1ae6",
      "revId": "2c6b57558931ad99f6010ba69b102b3a445e93c1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b97d3c5_162bcc9a",
        "filename": "key/gcp/gcp_test.go",
        "patchSetId": 1
      },
      "lineNbr": 324,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-11-11T06:39:53Z",
      "side": 1,
      "message": "An actual test would be nice.",
      "revId": "2c6b57558931ad99f6010ba69b102b3a445e93c1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b1ef349_44376e11",
        "filename": "key/gcp/gcp_test.go",
        "patchSetId": 1
      },
      "lineNbr": 324,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-11-11T10:27:23Z",
      "side": 1,
      "message": "Sure.",
      "parentUuid": "0b97d3c5_162bcc9a",
      "revId": "2c6b57558931ad99f6010ba69b102b3a445e93c1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b97d3c5_16210cca",
        "filename": "key/gcp/log.go",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-11-11T06:39:53Z",
      "side": 1,
      "message": "Why use actor when user is what we\u0027ve been using all along? Is it because the user might not be an official user yet? If so, PutSuccess should acknowledge it\u0027s now an official user and s/actor/user/. If it\u0027s some other reason, I\u0027m curious to know too.",
      "revId": "2c6b57558931ad99f6010ba69b102b3a445e93c1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b1ef349_243a72fa",
        "filename": "key/gcp/log.go",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-11-11T10:27:23Z",
      "side": 1,
      "message": "The actor is the user making the change. If it were \u0027user\u0027, how would that distinguish between the user making the change and the user being changed?",
      "parentUuid": "0b97d3c5_16210cca",
      "revId": "2c6b57558931ad99f6010ba69b102b3a445e93c1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b97d3c5_b1a062e2",
        "filename": "key/gcp/log.go",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-11-11T16:29:56Z",
      "side": 1,
      "message": "Ah, yes. I misunderstood this. SG.",
      "parentUuid": "0b1ef349_243a72fa",
      "revId": "2c6b57558931ad99f6010ba69b102b3a445e93c1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b97d3c5_9169a6d7",
        "filename": "key/gcp/log.go",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 5025
      },
      "writtenOn": "2016-11-11T16:17:41Z",
      "side": 1,
      "message": "If we do go with a snapshot for scalability, as I mentioned in another comment, then the starting hash also needs to be preserved from the previous log.  That is, a reset of the server should preserve hashes.  The goal is that two people watching the logs can compare hashes to confirm they\u0027re both seeing exactly the same log.",
      "revId": "2c6b57558931ad99f6010ba69b102b3a445e93c1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b97d3c5_96699cd7",
        "filename": "key/gcp/log.go",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-11-11T06:39:53Z",
      "side": 1,
      "message": "You should use storage.Download here. The GCS bucket for the keyserver is not publicly readable. When something is not public, you can\u0027t \"Get\" an href for it. But you can \"Download\".\n\n(Though, there\u0027s currently a bug in the keyserver because the latest users created via email were marked public. I filed issue #105. It\u0027s a trivial fix, but we need to resolve the above first or things won\u0027t work).",
      "revId": "2c6b57558931ad99f6010ba69b102b3a445e93c1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b1ef349_e4277ae4",
        "filename": "key/gcp/log.go",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-11-11T10:27:23Z",
      "side": 1,
      "message": "Sure.",
      "parentUuid": "0b97d3c5_96699cd7",
      "revId": "2c6b57558931ad99f6010ba69b102b3a445e93c1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b97d3c5_36efe845",
        "filename": "key/gcp/log.go",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-11-11T06:39:53Z",
      "side": 1,
      "message": "The log can grow arbitrarily large and become too unwieldy. We should use chunking.",
      "revId": "2c6b57558931ad99f6010ba69b102b3a445e93c1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b1ef349_043d76f1",
        "filename": "key/gcp/log.go",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-11-11T10:27:23Z",
      "side": 1,
      "message": "I don\u0027t think we need to worry about this now. Each update is about ~500 bytes. We\u0027d need to have handled 2000 changes for this to even reach 1MB. I\u0027d rather file an issue and deal with it when we\u0027re successful enough for it to be a problem. :-)",
      "parentUuid": "0b97d3c5_36efe845",
      "revId": "2c6b57558931ad99f6010ba69b102b3a445e93c1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b97d3c5_f19aeaa7",
        "filename": "key/gcp/log.go",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-11-11T16:29:56Z",
      "side": 1,
      "message": "Filing an issue sounds good.",
      "parentUuid": "0b1ef349_043d76f1",
      "revId": "2c6b57558931ad99f6010ba69b102b3a445e93c1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    }
  ]
}