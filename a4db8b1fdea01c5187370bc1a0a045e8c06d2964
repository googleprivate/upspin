{
  "comments": [
    {
      "key": {
        "uuid": "d95ca7da_658d0626",
        "filename": "flags/flags.go",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-09T22:45:14Z",
      "side": 1,
      "message": "I have a counterproposal for how this function works, and would like to hear your thoughts.\n\nWhat if it were invoked like this?\n\n  flags.Enable(\u0026flags.Config, \u0026flags.Context)\n\nThat way the compiler checks that you have spelled the argument correctly,\nand the enabler does not have to remember the spelling of the flag itself when enabling them. They just use the same identifier used to access the flag value itself.",
      "revId": "a4db8b1fdea01c5187370bc1a0a045e8c06d2964",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9316b83_d96cf7a5",
        "filename": "flags/flags.go",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-09T22:51:32Z",
      "side": 1,
      "message": "That is fine by me. \n\nHow would Enable be implemented? Using ...interface{} and reflection? Or do you have something else in mind?\n\nI probably won\u0027t do this right now. I\u0027m working on other things while the Tree stuff is in review, but once I\u0027m unblocked, I\u0027m 100% on Tree. I can come back to this in the next break or if you want to take it over, I\u0027m also fine with it. Let me know please.\n\nThanks.",
      "parentUuid": "d95ca7da_658d0626",
      "revId": "a4db8b1fdea01c5187370bc1a0a045e8c06d2964",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d95ca7da_c5a4faa6",
        "filename": "flags/flags.go",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-09T22:54:18Z",
      "side": 1,
      "message": "The implementation would work by doing a taking an ...interface{} and doing a type assertion against the arguments to *string and *logFlag, then just doing a normal pointer comparison (no reflection necessary).\n\nIf Rob thinks this is a good idea, I\u0027m happy to update this CL with the implementation. It\u0027s trivial.",
      "parentUuid": "f9316b83_d96cf7a5",
      "revId": "a4db8b1fdea01c5187370bc1a0a045e8c06d2964",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d95ca7da_45900a3f",
        "filename": "flags/flags.go",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-09T22:45:14Z",
      "side": 1,
      "message": "rather than returning an error, this function should just log.Fatal if something bad occurs. every caller will just do the same thing",
      "revId": "a4db8b1fdea01c5187370bc1a0a045e8c06d2964",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    }
  ]
}