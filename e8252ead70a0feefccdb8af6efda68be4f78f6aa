{
  "comments": [
    {
      "key": {
        "uuid": "688a07dd_4792c2fc",
        "filename": "cmd/dirserver/main.go",
        "patchSetId": 3
      },
      "lineNbr": 257,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-20T00:28:36Z",
      "side": 1,
      "message": "This should be in upspin/proto/proto.go.",
      "revId": "e8252ead70a0feefccdb8af6efda68be4f78f6aa",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e850b71d_45a3caa7",
        "filename": "cmd/dirserver/main.go",
        "patchSetId": 3
      },
      "lineNbr": 257,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-20T21:10:20Z",
      "side": 1,
      "message": "I don\u0027t think so, since there are similar bits of code in this file for all the other RPC methods. Also, it will include logging once I fix the TODO, which is not the responsibility of the proto package.",
      "parentUuid": "688a07dd_4792c2fc",
      "revId": "e8252ead70a0feefccdb8af6efda68be4f78f6aa",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e850b71d_653a467d",
        "filename": "dir/remote/remote.go",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-08-19T23:31:30Z",
      "side": 1,
      "message": "you don\u0027t need these len checks, since errors.UnmarshalError handles nil and empty correctly, returning nil.",
      "revId": "e8252ead70a0feefccdb8af6efda68be4f78f6aa",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e850b71d_2598ce73",
        "filename": "dir/remote/remote.go",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-20T21:10:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e850b71d_653a467d",
      "revId": "e8252ead70a0feefccdb8af6efda68be4f78f6aa",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "688a07dd_e77676e2",
        "filename": "dir/remote/remote.go",
        "patchSetId": 3
      },
      "lineNbr": 215,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-20T00:28:36Z",
      "side": 1,
      "message": "move to upspin/proto/proto.go",
      "revId": "e8252ead70a0feefccdb8af6efda68be4f78f6aa",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e850b71d_a58b9e1e",
        "filename": "dir/remote/remote.go",
        "patchSetId": 3
      },
      "lineNbr": 215,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-20T21:10:20Z",
      "side": 1,
      "message": "see my comment on the other file.\n\nAgain, this is logic specific to the handling of these RPC methods. Nobody else is going to do this. For instance, returning the err wrapped with op, IO is something that only this package wants to do.",
      "parentUuid": "688a07dd_e77676e2",
      "revId": "e8252ead70a0feefccdb8af6efda68be4f78f6aa",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "688a07dd_c7e25295",
        "filename": "upspin/proto/upspin.proto",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-20T00:28:36Z",
      "side": 1,
      "message": "EntryError seems to refer to the error in an entry. Why not EntryOrError? Or better yet, EntryOrErrorResponse to keep it protocol-buffery.",
      "revId": "e8252ead70a0feefccdb8af6efda68be4f78f6aa",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e850b71d_e591964e",
        "filename": "upspin/proto/upspin.proto",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-20T21:10:20Z",
      "side": 1,
      "message": "It\u0027s not strictly \"Or\" because both fields can be set, in the case of ErrFollowLink. I could be compelled to tack \"Response\" on the end of these, but I\u0027m also not very excited about it. The service definition reads well with the current name, IMO, and that\u0027s the most important thing this package provides.",
      "parentUuid": "688a07dd_c7e25295",
      "revId": "e8252ead70a0feefccdb8af6efda68be4f78f6aa",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    }
  ]
}