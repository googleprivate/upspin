{
  "comments": [
    {
      "key": {
        "uuid": "36907709_422e3499",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 167,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-09-04T22:53:27Z",
      "side": 1,
      "message": "When you don\u0027t want the user to be able to follow the link, you should also not return the link entry, otherwise you\u0027re still leaking information.\nThe errLink method should return (*upspin.DirEntry, error) and then it can take care of zeroing-out the entry if the user isn\u0027t allowed to see it, and all these invocations become\n\nreturn s.errLink(op, entry)",
      "revId": "d32b46d903d85769fd23d0de5ad51dcc0f440838",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36907709_2229b08f",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 255,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-09-04T22:53:27Z",
      "side": 1,
      "message": "this comment is out of date",
      "revId": "d32b46d903d85769fd23d0de5ad51dcc0f440838",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36907709_e242e83e",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 723,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-09-04T22:53:27Z",
      "side": 1,
      "message": "this comment is wrong. neither of these cases let the user follow the link (and nor should they)",
      "revId": "d32b46d903d85769fd23d0de5ad51dcc0f440838",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36907709_02402c34",
        "filename": "dir/server/server.go",
        "patchSetId": 2
      },
      "lineNbr": 730,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-09-04T22:53:27Z",
      "side": 1,
      "message": "errant space after \u0027returns\u0027.\nalso this comment describes what the function should do, but it doesn\u0027t (return two values)",
      "revId": "d32b46d903d85769fd23d0de5ad51dcc0f440838",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36907709_622fb897",
        "filename": "test/error_test.go",
        "patchSetId": 2
      },
      "lineNbr": 149,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-09-04T22:53:27Z",
      "side": 1,
      "message": "Why don\u0027t these pass with the path name intact? Was it because they were nested differently?\nMaybe you missed it, but I modified the Match function to be more liberal in my most recent CL.\nIt shouldÂ now match if the link name appears anywhere in any of the returned nested errors.\nI think it\u0027s important that the server returns the relevant path names in the error responses. Can you try putting these checks back in?",
      "revId": "d32b46d903d85769fd23d0de5ad51dcc0f440838",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36907709_82343ced",
        "filename": "test/error_test.go",
        "patchSetId": 2
      },
      "lineNbr": 573,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-09-04T22:53:27Z",
      "side": 1,
      "message": "op already has a colon in it",
      "revId": "d32b46d903d85769fd23d0de5ad51dcc0f440838",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    }
  ]
}