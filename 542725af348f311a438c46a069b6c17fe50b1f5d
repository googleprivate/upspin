{
  "comments": [
    {
      "key": {
        "uuid": "fc7d1b86_c46d1901",
        "filename": "dir/server/server.go",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 5309
      },
      "writtenOn": "2017-05-17T07:59:29Z",
      "side": 1,
      "message": "By the way, the server does have a store server paired with it. You could Put the data into a store object and create a direntry pointing to it.  A bit more work but less ugly than returning a gigabyte error message.",
      "range": {
        "startLine": 211,
        "startChar": 17,
        "endLine": 211,
        "endChar": 28
      },
      "revId": "542725af348f311a438c46a069b6c17fe50b1f5d",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "452e2341_ad3ebdbc",
        "filename": "dir/server/server.go",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 5307
      },
      "writtenOn": "2017-05-17T15:03:32Z",
      "side": 1,
      "message": "I\u0027d instead be inclined to do more of the work inside dirserver instead of sending everything to the client.  If verbose debugging output is needed, that approach would create a local disk file in s.logDir.   I wasn\u0027t completely happy either with generating temporary garbage in the storeserver just to return the list of garbage.\n\nI guess the question is how long is this temporary hack going to be around?   If just a few weeks, meh.",
      "parentUuid": "fc7d1b86_c46d1901",
      "range": {
        "startLine": 211,
        "startChar": 17,
        "endLine": 211,
        "endChar": 28
      },
      "revId": "542725af348f311a438c46a069b6c17fe50b1f5d",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef51890f_675d9caa",
        "filename": "dir/server/server.go",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 5309
      },
      "writtenOn": "2017-05-17T16:10:59Z",
      "side": 1,
      "message": "My guess is more like a few months.\n\nSaving in s.logDir would be better.  If you are going to allow this only by the server user, then we\u0027ll be running it on the dirserver machine anyways.  It makes your command look less ugliferous vis a vis the error handling and you can write it out as you go.  No reason to do duplicate suppression in the dirserver.",
      "parentUuid": "452e2341_ad3ebdbc",
      "range": {
        "startLine": 211,
        "startChar": 17,
        "endLine": 211,
        "endChar": 28
      },
      "revId": "542725af348f311a438c46a069b6c17fe50b1f5d",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "041168f9_69125c17",
        "filename": "dir/server/server.go",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 5307
      },
      "writtenOn": "2017-05-17T16:25:26Z",
      "side": 1,
      "message": "I run command \"garbage\" on my client machine to save going to the browser-ssh window.  I have to keep the deploy config and credentials around on my client anyway, since I don\u0027t trust that the VM files won\u0027t get wiped out.\n\nBut I agree that doing it all server-side is more efficient in network resources and involves less fighting with the upspin protocol design, at the cost of less convenient iteration of the garbage collection rules.   Are you reasonably happy with the GC itself as expressed here?\n\nI had forgotten how much duplication there is in snapshots until I looked.  Even server-side, I imagine it is worth doing the duplicate suppression.",
      "parentUuid": "ef51890f_675d9caa",
      "range": {
        "startLine": 211,
        "startChar": 17,
        "endLine": 211,
        "endChar": 28
      },
      "revId": "542725af348f311a438c46a069b6c17fe50b1f5d",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "152a0bfb_4bd6a143",
        "filename": "dir/server/server.go",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 5309
      },
      "writtenOn": "2017-05-17T16:54:10Z",
      "side": 1,
      "message": "You\u0027re right, wasn\u0027t thinking about snapshots. I was more worried about space constraints in the server since without it you don\u0027t have to keep the whole map in the server till you are done. Not a problem for a short lived solution but unplayable in the long run. As you say, this isn\u0027t the long run.",
      "parentUuid": "041168f9_69125c17",
      "range": {
        "startLine": 211,
        "startChar": 17,
        "endLine": 211,
        "endChar": 28
      },
      "revId": "542725af348f311a438c46a069b6c17fe50b1f5d",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "686dc2ef_b858a468",
        "filename": "dir/server/server.go",
        "patchSetId": 1
      },
      "lineNbr": 221,
      "author": {
        "id": 5309
      },
      "writtenOn": "2017-05-17T06:54:32Z",
      "side": 1,
      "message": "Does this mean that any user with a tree on the server can list all blocks?",
      "range": {
        "startLine": 221,
        "startChar": 0,
        "endLine": 221,
        "endChar": 46
      },
      "revId": "542725af348f311a438c46a069b6c17fe50b1f5d",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cadc644b_f174ba02",
        "filename": "dir/server/server.go",
        "patchSetId": 1
      },
      "lineNbr": 221,
      "author": {
        "id": 5307
      },
      "writtenOn": "2017-05-17T07:06:25Z",
      "side": 1,
      "message": "No, the canRead of upspin@example.com/garbageList on line 217 is intended to be true only for the upspinserver user, not ordinary users.\nThe glob on line 221 is just to get a full list of all the users with roots in this dirserver.",
      "parentUuid": "686dc2ef_b858a468",
      "range": {
        "startLine": 221,
        "startChar": 0,
        "endLine": 221,
        "endChar": 46
      },
      "revId": "542725af348f311a438c46a069b6c17fe50b1f5d",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57c2ae95_7e3f9dc3",
        "filename": "dir/server/server.go",
        "patchSetId": 1
      },
      "lineNbr": 221,
      "author": {
        "id": 5309
      },
      "writtenOn": "2017-05-17T07:25:51Z",
      "side": 1,
      "message": "I think we are understanding the meaning of s.userName differently. s represents an instance of a server serving for an authenticated client, see Dial.  Hence s.userName is the name of whomever is connected to the server. It is not the user that the server is running as. If you intended just the server user, you want to compare against s.serverConfig.UserName(). As is anyone with a root on the system doing a Lookup(\"their@name/garbagelist\") will generate a garbagelist.",
      "parentUuid": "cadc644b_f174ba02",
      "range": {
        "startLine": 221,
        "startChar": 0,
        "endLine": 221,
        "endChar": 46
      },
      "revId": "542725af348f311a438c46a069b6c17fe50b1f5d",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1650f399_3ef4e60c",
        "filename": "dir/server/server.go",
        "patchSetId": 1
      },
      "lineNbr": 221,
      "author": {
        "id": 5307
      },
      "writtenOn": "2017-05-17T14:53:31Z",
      "side": 1,
      "message": "Done.\n\nBut since I misunderstood this there is probably more that I did not yet grok.  Feel free to continue review, or not, while I study the code further.",
      "parentUuid": "57c2ae95_7e3f9dc3",
      "range": {
        "startLine": 221,
        "startChar": 0,
        "endLine": 221,
        "endChar": 46
      },
      "revId": "542725af348f311a438c46a069b6c17fe50b1f5d",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d1ca223_a8e35e35",
        "filename": "dir/server/server.go",
        "patchSetId": 1
      },
      "lineNbr": 232,
      "author": {
        "id": 5309
      },
      "writtenOn": "2017-05-17T06:54:32Z",
      "side": 1,
      "message": "That\u0027s one hell of a long error string. Granted this is a temporary hack but there should be a way to enable/disable it since this could eat all of memory.",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 232,
        "endChar": 38
      },
      "revId": "542725af348f311a438c46a069b6c17fe50b1f5d",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "870e33aa_04d1c33b",
        "filename": "dir/server/server.go",
        "patchSetId": 1
      },
      "lineNbr": 232,
      "author": {
        "id": 5307
      },
      "writtenOn": "2017-05-17T07:06:25Z",
      "side": 1,
      "message": "Yep.   I was struggling here to use some existing mechanism to send the data back to the client without touching protobuf definitions etc.\n\nI imagine the rewrite will introduce a new call that does this comparison of lists on the server rather than in the client.  But maybe we can learn a few things more easily on the client first.  I haven\u0027t thought much about links, for example.\n\nIf the error string is too big merely by a factor of two or four, set verbose\u003dfalse.    But for now I find I learn more with verbose\u003dtrue.",
      "parentUuid": "5d1ca223_a8e35e35",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 232,
        "endChar": 38
      },
      "revId": "542725af348f311a438c46a069b6c17fe50b1f5d",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3dd86317_bc664725",
        "filename": "dir/server/server.go",
        "patchSetId": 1
      },
      "lineNbr": 232,
      "author": {
        "id": 5309
      },
      "writtenOn": "2017-05-17T16:54:10Z",
      "side": 1,
      "message": "And by doing the Errorf, you are doubling the space yet again.  A lot to be said for just writing it to a file.",
      "parentUuid": "870e33aa_04d1c33b",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 232,
        "endChar": 38
      },
      "revId": "542725af348f311a438c46a069b6c17fe50b1f5d",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    }
  ]
}