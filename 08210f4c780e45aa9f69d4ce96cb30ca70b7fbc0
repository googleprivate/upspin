{
  "comments": [
    {
      "key": {
        "uuid": "a104284e_f7007866",
        "filename": "key/gcp/gcp.go",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-10-25T00:42:28Z",
      "side": 1,
      "message": "this isn\u0027t right. the user is giving you this string. you\u0027re a server. your job is to canonicalize it, not to reject it if it is non-canonical.\nuser.Parse is all you need, but then you must install it using the name that comes back from there.\n\nyou made the same mistake in directory.Put but we fixed it there.",
      "revId": "08210f4c780e45aa9f69d4ce96cb30ca70b7fbc0",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a104284e_7ab0ed96",
        "filename": "key/gcp/gcp.go",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-10-25T05:54:52Z",
      "side": 1,
      "message": "Well, if this is an error, I made this error once, here and in DirServer at the same time. As you can see, I\u0027m just renaming a parameter here. This line is not new, it has been here for a while.\n\nHowever, we do reject Dir.Put on poorly formatted DirEntry, which comes from the user too (or could come, if the user wants to talk directly to the dir server). This is true of dir/server and dir/inprocess.\n\nAnd key/inprocess.Put does the same thing.\n\nSo, what\u0027s really the correct answer here? \n\nI think the user needs to send a valid user. cmd/upspin user -put should canonicalize it if it\u0027s not right.",
      "parentUuid": "a104284e_f7007866",
      "revId": "08210f4c780e45aa9f69d4ce96cb30ca70b7fbc0",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "811e44a4_286e2b73",
        "filename": "key/gcp/gcp.go",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-10-25T00:01:23Z",
      "side": 1,
      "message": "shouldn\u0027t this be in valid.User ? and also user.Parse ?",
      "revId": "08210f4c780e45aa9f69d4ce96cb30ca70b7fbc0",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a104284e_14f7fab9",
        "filename": "key/gcp/gcp.go",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-10-25T00:10:54Z",
      "side": 1,
      "message": "No. \"*\" is explicitly allowed in Parse and Valid. We are allowed to add it to any Access file, by design (though, I don\u0027t think it works perfectly everywhere as-is).",
      "parentUuid": "811e44a4_286e2b73",
      "revId": "08210f4c780e45aa9f69d4ce96cb30ca70b7fbc0",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a104284e_77eda89b",
        "filename": "key/gcp/gcp.go",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-10-25T00:42:28Z",
      "side": 1,
      "message": "return errors.E(op, errors.Invalid, u.Name, errors.Str(\"user has wildcard \u0027*\u0027 in name\")",
      "revId": "08210f4c780e45aa9f69d4ce96cb30ca70b7fbc0",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a104284e_375840a3",
        "filename": "key/inprocess/user.go",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-10-25T00:42:28Z",
      "side": 1,
      "message": "same thing here.",
      "revId": "08210f4c780e45aa9f69d4ce96cb30ca70b7fbc0",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    }
  ]
}