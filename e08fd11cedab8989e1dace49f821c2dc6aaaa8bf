{
  "comments": [
    {
      "key": {
        "uuid": "f5d2ff20_3420cf59",
        "filename": "rpc/certpool.go",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 5305
      },
      "writtenOn": "2017-07-24T23:47:32Z",
      "side": 1,
      "message": "you\u0027re holding the lock while calling certPoolFromDir.\nthat\u0027s probably OK because the call will almost always only happen once, but it\u0027s not good locking practice in other circumstances.\n\ni might refactor to avoid that, such as locking twice or using another approach, for instance, atomic.Value might be better than sync.Mutex. you can see an example use in typeInfoMap in encoding/gob.\n\nbut that might be overkill for this use. what you have is reasonable given the usage pattern.",
      "revId": "e08fd11cedab8989e1dace49f821c2dc6aaaa8bf",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30210ea7_b45d12bf",
        "filename": "rpc/certpool.go",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 5305
      },
      "writtenOn": "2017-07-24T23:48:53Z",
      "side": 1,
      "message": "ignore all that unless you want to be fancier. i\u0027m overthinking.",
      "parentUuid": "f5d2ff20_3420cf59",
      "revId": "e08fd11cedab8989e1dace49f821c2dc6aaaa8bf",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    }
  ]
}