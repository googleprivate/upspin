{
  "comments": [
    {
      "key": {
        "uuid": "e850b71d_c8146f9f",
        "filename": "dir/server/tree/treeimpl.go",
        "patchSetId": 1
      },
      "lineNbr": 306,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-22T05:14:49Z",
      "side": 1,
      "message": "t.mu must be held",
      "revId": "6cc149d884d50ad308222aa37469d2af05e869e2",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "688a07dd_f08cee32",
        "filename": "dir/server/tree/treeimpl.go",
        "patchSetId": 1
      },
      "lineNbr": 306,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-22T05:27:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e850b71d_c8146f9f",
      "revId": "6cc149d884d50ad308222aa37469d2af05e869e2",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e850b71d_4874fffc",
        "filename": "dir/server/tree/treeimpl.go",
        "patchSetId": 1
      },
      "lineNbr": 428,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-22T05:14:49Z",
      "side": 1,
      "message": "I wonder if here and elsewhere you should be returning a copy of the DirEntry struct? The user of Tree may modify it and corrupt the data stored in the Tree.",
      "revId": "6cc149d884d50ad308222aa37469d2af05e869e2",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "688a07dd_90a5629d",
        "filename": "dir/server/tree/treeimpl.go",
        "patchSetId": 1
      },
      "lineNbr": 428,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-22T05:27:01Z",
      "side": 1,
      "message": "Ah, you had a comment a few CLs ago about Lookup returning a copy instead of a pointer (my first CL returned copies). I mentioned this exact reason but then later changed my mind and agreed with you. :-) The DirServer won\u0027t change an entry because Lookup and Glob are non-mutating. Can it happen by accident? Sure. But that\u0027s what unittests are for. \n\nI was leaning towards copy earlier, but I it\u0027s not needed really.",
      "parentUuid": "e850b71d_4874fffc",
      "revId": "6cc149d884d50ad308222aa37469d2af05e869e2",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e850b71d_68b1fba4",
        "filename": "dir/server/tree/treeimpl.go",
        "patchSetId": 1
      },
      "lineNbr": 428,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-22T07:17:00Z",
      "side": 1,
      "message": "Hm, IIRC that was an internal helper that was doing that. Maybe I missed the bigger picture at the time. We should probably document that a *DirEntry returned by any of these methods should not be mutated, as this tends to happen in common usage.\n\nI think the actual upspin.DirServer implementation *should* return a copy, though, as there you can\u0027t make any guarantees about its usage.",
      "parentUuid": "688a07dd_90a5629d",
      "revId": "6cc149d884d50ad308222aa37469d2af05e869e2",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e850b71d_2879c3f4",
        "filename": "dir/server/tree/treeimpl.go",
        "patchSetId": 1
      },
      "lineNbr": 440,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-08-22T05:14:49Z",
      "side": 1,
      "message": "maybe i\u0027m misunderstanding the model, but shouldn\u0027t a node\u0027s ancestors all be considered dirty if that node is dirty?",
      "revId": "6cc149d884d50ad308222aa37469d2af05e869e2",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "688a07dd_509fda4c",
        "filename": "dir/server/tree/treeimpl.go",
        "patchSetId": 1
      },
      "lineNbr": 440,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-08-22T05:27:01Z",
      "side": 1,
      "message": "Ah, yes. There\u0027s no need to check whether any of the children is dirty. Good point.\n\nFixed.",
      "parentUuid": "e850b71d_2879c3f4",
      "revId": "6cc149d884d50ad308222aa37469d2af05e869e2",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    }
  ]
}