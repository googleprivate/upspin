{
  "comments": [
    {
      "key": {
        "uuid": "d4e9c5d0_dc182dc8",
        "filename": "directory/gcp/gcp.go",
        "patchSetId": 2
      },
      "lineNbr": 177,
      "author": {
        "id": 5010
      },
      "writtenOn": "2016-06-14T19:31:23Z",
      "side": 1,
      "message": "I don\u0027t understand why you make a distinction here.  This lock is only based on the path name and the user root is a perfectly fine path name to lock on.",
      "range": {
        "startLine": 177,
        "startChar": 4,
        "endLine": 177,
        "endChar": 20
      },
      "revId": "f9fe0f62ef02b38f11db3c4adb0919dd523f19bd",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4e9c5d0_5cbfbd76",
        "filename": "directory/gcp/gcp.go",
        "patchSetId": 2
      },
      "lineNbr": 177,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-06-14T19:38:54Z",
      "side": 1,
      "message": "My assumption is that I would go with fine-grain locking: use the deepest path possible. Locking the whole user is only necessary when we are:\n1) Working at the root level, obviously.\n2) Updating Group or Access files.\n\nFor all else, as we talked offline, I wanted to go with a hybrid solution that would use another lock, dependent only on the path name, so that accessing a/b/c and a/d/e would not cause any contention (other than random collisions in the pool).\n\nMaybe I should just always lock the user and be done. That was option 1) in an email I sent yesterday, but I wasn\u0027t too happy with it.\n\nIt think this is not that much more complex, but it does make the code harder to follow and, as pointed out, it\u0027s not very clear when to lock what or when.\n\nWe have not yet solved the issue of how to document this better.",
      "parentUuid": "d4e9c5d0_dc182dc8",
      "range": {
        "startLine": 177,
        "startChar": 4,
        "endLine": 177,
        "endChar": 20
      },
      "revId": "f9fe0f62ef02b38f11db3c4adb0919dd523f19bd",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b46b7130_e3a0d2a9",
        "filename": "directory/gcp/gcp.go",
        "patchSetId": 2
      },
      "lineNbr": 177,
      "author": {
        "id": 5010
      },
      "writtenOn": "2016-06-14T19:48:07Z",
      "side": 1,
      "message": "But you are not always locking the user.   You are only doing it when the parent is the root, i.e., if you are putting a file like \u0027p@google.com/x\u0027.  You are then locking \u0027p@google.com\u0027 which is what you would be doing if you did your userLock anyways.  All this code does is a round about way of getting to the same result that you would get if you just locked the parent path name.",
      "parentUuid": "d4e9c5d0_5cbfbd76",
      "range": {
        "startLine": 177,
        "startChar": 4,
        "endLine": 177,
        "endChar": 20
      },
      "revId": "f9fe0f62ef02b38f11db3c4adb0919dd523f19bd",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f43ec9eb_4caf2797",
        "filename": "directory/gcp/pathlock.go",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-06-14T17:33:50Z",
      "side": 1,
      "message": "when do i need one? when do i need another? there isn\u0027t enough explanation.",
      "revId": "f9fe0f62ef02b38f11db3c4adb0919dd523f19bd",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f43ec9eb_a0819413",
        "filename": "directory/gcp/root.go",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-06-14T01:07:15Z",
      "side": 1,
      "message": "One practice I have seen used effectively is putting the suffix \"Locked\" at the end of methods that should be called with a lock held.\n\nSo this method would be getRootLocked, and so on. It\u0027s a nice reminder at the call site that a particular lock should be held.",
      "revId": "f9fe0f62ef02b38f11db3c4adb0919dd523f19bd",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f43ec9eb_2372ae98",
        "filename": "directory/gcp/root.go",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-06-14T01:58:34Z",
      "side": 1,
      "message": "I know. But I usually see that when there\u0027s a version without the lock as well. Like, getDir and getDirLocked. Since there are many methods here that require a lock, I thought it was kind of a bit detrimental to the readability...",
      "parentUuid": "f43ec9eb_a0819413",
      "revId": "f9fe0f62ef02b38f11db3c4adb0919dd523f19bd",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d47aa5a9_34fc9078",
        "filename": "directory/gcp/root.go",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 5020
      },
      "writtenOn": "2016-06-14T02:55:35Z",
      "side": 1,
      "message": "I\u0027d prefer to see the word Locked around a bit than to have more trouble tracking down racy code. I\u0027ve seen it used generally when the method expects some lock to be held. Considering the number of names in this package already, I think it makes sense to put this flag in the name.",
      "parentUuid": "f43ec9eb_2372ae98",
      "revId": "f9fe0f62ef02b38f11db3c4adb0919dd523f19bd",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f43ec9eb_2672bc98",
        "filename": "directory/gcp/root.go",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-06-14T05:41:52Z",
      "side": 1,
      "message": "In general, I agree. I originally started out that way and then realized that half of the methods would end up having Locked for suffix, which is kind of noisy, specially because there are two sets of locks, User and Path. getDirEntry for example, requires one or the other. Should it end with UserOrPathLocked? How about the others? Which lock is it? Should they all specify UserLocked or PathLocked?\n\nI see Dave posted a comment about a third option: NoLock suffix. \n\nWe should document our naming standards so that these reviews go a bit more smoothly in the future.\n\nAnyway, I\u0027m usually in favor of not arguing too much about small potatoes, but I also wanted to point out this decision was deliberate, not an oversight.\n\nLet\u0027s all vote tomorrow and code by consensus -- because consensus is the fastest and most correct way to code, yay :-)",
      "parentUuid": "d47aa5a9_34fc9078",
      "revId": "f9fe0f62ef02b38f11db3c4adb0919dd523f19bd",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    }
  ]
}