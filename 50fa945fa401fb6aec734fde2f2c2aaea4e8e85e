{
  "comments": [
    {
      "key": {
        "uuid": "285ab8dd_0b7301b3",
        "filename": "pack/ee/ee.go",
        "patchSetId": 1
      },
      "lineNbr": 276,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-04-20T16:02:59Z",
      "side": 1,
      "message": "yes",
      "revId": "50fa945fa401fb6aec734fde2f2c2aaea4e8e85e",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "285ab8dd_4b42593f",
        "filename": "pack/ee/ee.go",
        "patchSetId": 1
      },
      "lineNbr": 297,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-04-20T16:02:59Z",
      "side": 1,
      "message": "i never liked variable names that are just their type. think what this would look like if the type were \u0027int\u0027. keyHashArray is OK because its raison d\u0027Ãªtre is to be an array, but oldmap (which should be oldMap) is just empty of meaning.\n\nprevKeys maybe?",
      "revId": "50fa945fa401fb6aec734fde2f2c2aaea4e8e85e",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "285ab8dd_0b4c616c",
        "filename": "pack/ee/ee.go",
        "patchSetId": 1
      },
      "lineNbr": 298,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-04-20T16:02:59Z",
      "side": 1,
      "message": "it\u0027s not so much old as previous. prevWrap?",
      "revId": "50fa945fa401fb6aec734fde2f2c2aaea4e8e85e",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "285ab8dd_8b6851f3",
        "filename": "upspin/upspin.go",
        "patchSetId": 1
      },
      "lineNbr": 150,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-04-20T15:31:30Z",
      "side": 1,
      "message": "I still think we haven\u0027t talked much about wrapping and keys.\n\nHow about:\n\n// Share, executed by the file owner, extracts any per-file encryption key from packdata and recompute the packdata so that all readers can decrypt the files they are supposed to read. In case of error...",
      "revId": "50fa945fa401fb6aec734fde2f2c2aaea4e8e85e",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "285ab8dd_2bf35d8a",
        "filename": "upspin/upspin.go",
        "patchSetId": 1
      },
      "lineNbr": 150,
      "author": {
        "id": 5025
      },
      "writtenOn": "2016-04-20T15:40:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "285ab8dd_8b6851f3",
      "revId": "50fa945fa401fb6aec734fde2f2c2aaea4e8e85e",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "285ab8dd_8bccd13a",
        "filename": "upspin/upspin.go",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-04-20T15:50:51Z",
      "side": 1,
      "message": "\"file owner\": what file? there is no file here. that problem is solved by having Put only return the relevant data to a client with the power to do the updates.\n\n// Share updates each packdata element with information to enable all the readers,\n// and only those readers, to be able to read and decrypt the associated ciphertext,\n// which is held separate from this call. It is invoked in response to an invocation\n// of Directory.Put returning information about entries that need updating due to\n// changes in the set of users with permissions to read the associated items.\n// In case of error ... (continue as above).",
      "revId": "50fa945fa401fb6aec734fde2f2c2aaea4e8e85e",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "285ab8dd_6b8dd5f1",
        "filename": "upspin/upspin.go",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 5025
      },
      "writtenOn": "2016-04-20T15:55:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "285ab8dd_8bccd13a",
      "revId": "50fa945fa401fb6aec734fde2f2c2aaea4e8e85e",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "285ab8dd_4ecd8782",
        "filename": "upspin/upspin.go",
        "patchSetId": 1
      },
      "lineNbr": 274,
      "author": {
        "id": 5015
      },
      "writtenOn": "2016-04-20T17:13:03Z",
      "side": 1,
      "message": "Sorry for jumping late on this, but as I implement the new Put I realized that Delete will have the same possibility -- we need to remove readers that just lost access because an Access file was removed.\n\nThis can be done in another CL, of course.",
      "revId": "50fa945fa401fb6aec734fde2f2c2aaea4e8e85e",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": false
    }
  ]
}